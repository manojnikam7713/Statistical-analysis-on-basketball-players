<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='players_stats (players_stats)' inline='true' name='federated.1xu4m0o1jsn1om1d64dpq107rd6i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='players_stats' name='excel-direct.1wpczhz0s4m8gw18o4nrl0yogtrc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Decision Support/players_stats.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1wpczhz0s4m8gw18o4nrl0yogtrc' name='players_stats' table='[players_stats$]' type='table'>
          <columns gridOrigin='A1:AH491:no:A1:AH491:0' header='yes' outcome='2'>
            <column datatype='string' name='Name' ordinal='0' />
            <column datatype='integer' name='Games Played' ordinal='1' />
            <column datatype='integer' name='Minutes played' ordinal='2' />
            <column datatype='integer' name='Points' ordinal='3' />
            <column datatype='integer' name='Fields Goals made' ordinal='4' />
            <column datatype='integer' name='Field Goals attempted' ordinal='5' />
            <column datatype='real' name='Field Goal percentage%' ordinal='6' />
            <column datatype='integer' name='3 point field goals made' ordinal='7' />
            <column datatype='integer' name='3 point field goal attempted' ordinal='8' />
            <column datatype='real' name='3 point field goal percentage' ordinal='9' />
            <column datatype='integer' name='Free throws made' ordinal='10' />
            <column datatype='integer' name='Free throws attempted' ordinal='11' />
            <column datatype='real' name='Free throw Percentage' ordinal='12' />
            <column datatype='integer' name='Offensive Rebounds' ordinal='13' />
            <column datatype='integer' name='Defensive Rebounds' ordinal='14' />
            <column datatype='integer' name='Rebounds' ordinal='15' />
            <column datatype='integer' name='Assists' ordinal='16' />
            <column datatype='integer' name='Steals' ordinal='17' />
            <column datatype='integer' name='Blocks' ordinal='18' />
            <column datatype='integer' name='Turnovers' ordinal='19' />
            <column datatype='integer' name='PF' ordinal='20' />
            <column datatype='integer' name='Efficiency' ordinal='21' />
            <column datatype='real' name='AST/TOV' ordinal='22' />
            <column datatype='real' name='STL/TOV' ordinal='23' />
            <column datatype='integer' name='Age' ordinal='24' />
            <column datatype='string' name='Birth_Place' ordinal='25' />
            <column datatype='date' name='Birthdate' ordinal='26' />
            <column datatype='string' name='Collage' ordinal='27' />
            <column datatype='string' name='Experience' ordinal='28' />
            <column datatype='real' name='Height' ordinal='29' />
            <column datatype='string' name='Pos' ordinal='30' />
            <column datatype='string' name='Team' ordinal='31' />
            <column datatype='real' name='Weight' ordinal='32' />
            <column datatype='real' name='BMI' ordinal='33' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Games Played</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Games Played]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Games Played</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Minutes played</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Minutes played]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Minutes played</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Points]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Points</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fields Goals made</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Fields Goals made]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Fields Goals made</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Field Goals attempted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Field Goals attempted]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Field Goals attempted</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Field Goal percentage%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Field Goal percentage%]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Field Goal percentage%</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3 point field goals made</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3 point field goals made]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>3 point field goals made</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3 point field goal attempted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3 point field goal attempted]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>3 point field goal attempted</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3 point field goal percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[3 point field goal percentage]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>3 point field goal percentage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Free throws made</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Free throws made]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Free throws made</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Free throws attempted</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Free throws attempted]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Free throws attempted</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Free throw Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Free throw Percentage]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Free throw Percentage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Offensive Rebounds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Offensive Rebounds]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Offensive Rebounds</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Defensive Rebounds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Defensive Rebounds]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Defensive Rebounds</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rebounds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rebounds]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Rebounds</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Assists</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Assists]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Assists</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Steals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Steals]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Steals</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Blocks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Blocks]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Blocks</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Turnovers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Turnovers]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Turnovers</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PF</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PF]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>PF</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Efficiency</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Efficiency]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Efficiency</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AST/TOV</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AST/TOV]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>AST/TOV</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STL/TOV</remote-name>
            <remote-type>5</remote-type>
            <local-name>[STL/TOV]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>STL/TOV</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth_Place</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Birth_Place]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Birth_Place</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birthdate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Birthdate]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Birthdate</remote-alias>
            <ordinal>26</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Collage</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Collage]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Collage</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Experience</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Experience]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Experience</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Height</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Height]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Height</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pos</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Pos]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Pos</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BMI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BMI]</local-name>
            <parent-name>[players_stats]</parent-name>
            <remote-alias>BMI</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[players_stats]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AH491:no:A1:AH491:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='3 Point Field Goal Attempted' datatype='integer' name='[3 point field goal attempted]' role='measure' type='quantitative' />
      <column caption='3 Point Field Goal Percentage' datatype='real' name='[3 point field goal percentage]' role='measure' type='quantitative' />
      <column caption='3 Point Field Goals Made' datatype='integer' name='[3 point field goals made]' role='measure' type='quantitative' />
      <column caption='Ast/Tov' datatype='real' name='[AST/TOV]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Assists]' role='measure' type='quantitative' />
      <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
      <column caption='Birth Place' datatype='string' name='[Birth_Place]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Blocks]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Defensive Rebounds]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Efficiency]' role='measure' type='quantitative' />
      <column datatype='real' name='[Field Goal percentage%]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Field Goals attempted]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Fields Goals made]' role='measure' type='quantitative' />
      <column datatype='real' name='[Free throw Percentage]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Free throws attempted]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Free throws made]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Games Played]' role='measure' type='quantitative' />
      <column datatype='real' name='[Height]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Minutes played]' role='measure' type='quantitative' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Offensive Rebounds]' role='measure' type='quantitative' />
      <column datatype='integer' name='[PF]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Rebounds]' role='measure' type='quantitative' />
      <column caption='Stl/Tov' datatype='real' name='[STL/TOV]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Steals]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Turnovers]' role='measure' type='quantitative' />
      <column datatype='real' name='[Weight]' role='measure' type='quantitative' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[3 point field goal attempted]' derivation='Sum' name='[sum:3 point field goal attempted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3 point field goal percentage]' derivation='Sum' name='[sum:3 point field goal percentage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3 point field goals made]' derivation='Sum' name='[sum:3 point field goals made:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AST/TOV]' derivation='Sum' name='[sum:AST/TOV:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age]' derivation='Sum' name='[sum:Age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Assists]' derivation='Sum' name='[sum:Assists:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BMI]' derivation='Sum' name='[sum:BMI:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Blocks]' derivation='Sum' name='[sum:Blocks:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Defensive Rebounds]' derivation='Sum' name='[sum:Defensive Rebounds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Efficiency]' derivation='Sum' name='[sum:Efficiency:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Field Goal percentage%]' derivation='Sum' name='[sum:Field Goal percentage%:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Field Goals attempted]' derivation='Sum' name='[sum:Field Goals attempted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Fields Goals made]' derivation='Sum' name='[sum:Fields Goals made:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Free throw Percentage]' derivation='Sum' name='[sum:Free throw Percentage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Free throws attempted]' derivation='Sum' name='[sum:Free throws attempted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Free throws made]' derivation='Sum' name='[sum:Free throws made:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Games Played]' derivation='Sum' name='[sum:Games Played:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Height]' derivation='Sum' name='[sum:Height:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Minutes played]' derivation='Sum' name='[sum:Minutes played:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Offensive Rebounds]' derivation='Sum' name='[sum:Offensive Rebounds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PF]' derivation='Sum' name='[sum:PF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Points]' derivation='Sum' name='[sum:Points:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rebounds]' derivation='Sum' name='[sum:Rebounds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[STL/TOV]' derivation='Sum' name='[sum:STL/TOV:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Steals]' derivation='Sum' name='[sum:Steals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Turnovers]' derivation='Sum' name='[sum:Turnovers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Weight]' derivation='Sum' name='[sum:Weight:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Name)' hidden='true' name='[Action (Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Name]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.370703' measure-ordering='alphabetic' measure-percentage='0.629297' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alec Burks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Anthony Bennett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brandan Wright&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Charlie Villanueva&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Courtney Lee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DeMar DeRozan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dwight Buycks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Festus Ezeli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greg Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jae Crowder&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jason Smith&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JJ Hickson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan Adams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kendrick Perkins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyle Lowry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luis Scola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matt Bonner&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nazr Mohammed&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Patrick Beverley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ray McCallum&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russ Smith&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shelvin Mack&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tim Hardaway Jr.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tyler Zeller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zaza Pachulia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aaron Brooks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andre Iguodala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ben McLemore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cameron Bairstow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CJ Wilcox&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrell Arthur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dirk Nowitzki&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elton Brand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gigi Datome&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iman Shumpert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jannero Pargo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeremy Evans&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;John Jenkins&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Justin Hamilton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KJ McDaniels&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Leandro Barbosa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mario Chalmers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miles Plumlee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Noah Vonleh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PJ Tucker&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robin Lopez&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shabazz Napier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Terrence Jones&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trevor Booker&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Will Barton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Al Horford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andrei Kirilenko&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Blake Griffin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Caron Butler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cole Aldrich&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;David Wear&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Doug McDermott&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erick Green&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Goran Dragic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;J.J. Barea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jarnell Stokes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jerrelle Benimon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Johnny O&apos;Bryant III&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kawhi Leonard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kostas Papanikolaou&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lou Amundson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martell Webster&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mo Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Omer Asik&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rajon Rondo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ronny Turiaf&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shavlik Randolph&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Robinson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ty Lawson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wilson Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alexis Ajinca&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Archie Goodwin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brandon Knight&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chris Copeland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Damjan Rudez&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Deron Williams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E&apos;Twaun Moore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Garrett Temple&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harrison Barnes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jameer Nelson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jeff Adrien&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joe Harris&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenyon Martin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LaMarcus Aldridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malcolm Thomas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michael Beasley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nick Collison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pau Gasol&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reggie Jackson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ryan Kelly&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spencer Hawes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Toney Douglas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Udonis Haslem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alex Kirk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anthony Davis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brandon Bass&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chase Budinger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;D.J. Augustin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DeMarcus Cousins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight Howard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Francisco Garcia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JaKarr Sampson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jason Terry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JJ Redick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan Clarkson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenneth Faried&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyle O&apos;Quinn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luke Babbitt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Matthew Dellavedova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nene&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Patrick Christopher&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Raymond Felton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russell Westbrook&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sim Bhullar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timofey Mozgov&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tyreke Evans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zoran Dragic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Al Jefferson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andrew Bogut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bojan Bogdanovic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cartier Martin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corey Brewer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;David West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draymond Green&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ersan Ilyasova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gordon Hayward&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jabari Brown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jarrett Jack&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jerryd Bayless&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jon Leuer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kelly Olynyk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kris Humphries&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lou Williams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marvin Williams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monta Ellis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Omri Casspi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ramon Sessions&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roy Hibbert&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shawn Marion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tiago Splitter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tyler Ennis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Xavier Henry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andre Dawkins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Avery Bradley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryce Cotton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CJ McCollum&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darius Miller&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dewayne Dedmon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elijah Millsap&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gerald Wallace&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ian Clark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Young&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jerami Grant&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joffrey Lauvergne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jrue Holiday&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Khris Middleton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Larry Sanders&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marcus Smart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mike Muscala&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nikola Pekovic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Phil Pressey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Robert Covington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seth Curry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tarik Black&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Travis Wear&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wesley Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aaron Gordon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andre Miller&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beno Udrih&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carl Landry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cleanthony Early&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darren Collison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Donald Sloan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Enes Kanter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Glen Davis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isaiah Canaan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jared Cunningham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeremy Lamb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;John Lucas III&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Justin Holiday&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Klay Thompson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LeBron James&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Markel Brown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miroslav Raduljica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norris Cole&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quincy Acy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rodney Hood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shane Larkin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Terrence Ross&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trey Burke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Will Bynum&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amir Johnson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Austin Daye&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brook Lopez&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chris Paul&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dante Cunningham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Devin Harris&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ekpe Udoh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gerald Green&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henry Walker&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;James Jones&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jeff Withey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joel Freeland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Josh Smith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kevin Martin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Langston Galloway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marco Belinelli&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mike Dunleavy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nik Stauskas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pero Antic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ricky Rubio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serge Ibaka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steven Adams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tony Wroten&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vince Carter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Al-Farouq Aminu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andrew Nicholson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boris Diaw&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chandler Parsons&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cory Jefferson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DeAndre Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Drew Gooden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Evan Fournier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gorgui Dieng&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jabari Parker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jason Maxiell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jimmer Fredette&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jonas Jerebko&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kemba Walker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyle Anderson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luc Mbah a Moute&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mason Plumlee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nate Robinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Otto Porter Jr.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Randy Foye&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rudy Gay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shawne Williams&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tim Duncan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tyler Hansbrough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zach LaVine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allen Crabbe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arinze Onuaku&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brandon Rush&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chris Douglas-Roberts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danilo Gallinari&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Derrick Favors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Earl Barron&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Harris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hassan Whiteside&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;James Ennis III&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jeff Ayres&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joe Ingles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jorge Gutierrez&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kevin Durant&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lance Stephenson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manu Ginobili&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michael Carter-Williams&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nick Johnson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paul George&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Reggie Williams&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Samuel Dalembert&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stephen Curry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tony Allen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vander Blue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alonzo Gee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aron Baynes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brendan Haywood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chris Johnson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Danny Granger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Derrick Rose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Earl Clark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary Neal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hedo Turkoglu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;James Harden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jeff Green&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joe Johnson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jose Calderon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kevin Garnett&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lance Thomas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marc Gasol&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michael Kidd-Gilchrist&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nick Young&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paul Millsap&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richard Jefferson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sean Kilpatrick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steve Blake&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tony Parker&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Victor Claver&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anderson Varejao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austin Rivers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bruno Caboclo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chuck Hayes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dante Exum&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Devyn Marble&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elfrid Payton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gerald Henderson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hollis Thompson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;James Michael McAdoo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jeffery Taylor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joey Dorsey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JR Smith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kevin Seraphin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Larry Drew II&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marcus Morris&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mike Miller&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nikola Mirotic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Perry Jones III&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Robbie Hummel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sergey Karasev&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taj Gibson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Toure&apos; Murry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wayne Ellington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Andre Drummond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Gordon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;C.J. Watson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CJ Miles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darius Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dion Waiters&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elliot Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ian Mahinmi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JaMychal Green&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jerel McNeal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;John Henson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Julius Randle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kirk Hinrich&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lavoy Allen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marcus Thornton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mike Scott&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nikola Vucevic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PJ Hairston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Robert Sacre&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shabazz Muhammad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tayshaun Prince&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trevor Ariza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wesley Matthews&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alex Len&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anthony Morrow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brandon Davies&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chris Andersen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dahntay Jones&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DeMarre Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dwight Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Furkan Aldemir&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Stiemsma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaal Franklin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jason Thompson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joakim Noah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan Farmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kent Bazemore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyle Singler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luke Ridnour&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maurice Harkless&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nerlens Noel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Patrick Patterson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Reggie Bullock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ryan Anderson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TJ Warren&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyrus Thomas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alan Anderson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andrew Wiggins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bradley Beal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Channing Frye&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cory Joseph&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DeJuan Blair&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Drew Gordon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Evan Turner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grant Jerrett&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jack Cooley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jason Richardson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jimmy Butler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jonas Valanciunas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kendall Marshall&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle Korver&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lucas Nogueira&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Matt Barnes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nate Wolters&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pablo Prigioni&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rasual Butler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rudy Gobert&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shayne Whittington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tim Frazier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyler Johnson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zach Randolph&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adreian Payne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andre Roberson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bernard James&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carlos Boozer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clint Capela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;David Lee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Donatas Motiejunas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Bledsoe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Glen Rice&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isaiah Thomas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jared Dudley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jeremy Lin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;John Salmons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jusuf Nurkic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kobe Bryant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lester Hudson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Markieff Morris&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mirza Teletovic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;O.J. Mayo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quincy Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rodney Stuckey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shannon Brown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thabo Sefolosha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tristan Thompson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Will Cherry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amar&apos;e Stoudemire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arron Afflalo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brian Roberts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chris Kaman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Danny Green&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Derrick Williams&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ed Davis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;George Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Henry Sims&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;James Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jeff Teague&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joel Anthony&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Josh McRoberts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kevin Love&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Landry Fields&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marcin Gortat&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mike Conley&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicolas Batum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paul Pierce&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ricky Ledo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sebastian Telfair&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steve Novak&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tony Snell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Victor Oladipo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alexey Shved&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anthony Tolliver&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brandon Jennings&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chris Bosh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Damian Lillard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dennis Schroder&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dwyane Wade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gal Mekel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greivis Vasquez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamal Crawford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JaVale McGee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jodie Meeks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan Hamilton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kentavious Caldwell-Pope&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrie Irving&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luol Deng&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meyers Leonard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nick Calathes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Patty Mills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reggie Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ryan Hollins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spencer Dinwiddie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tobias Harris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyson Chandler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AJ Price&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andrea Bargnani&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bismack Biyombo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carmelo Anthony&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cody Zeller&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;David Stockton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dorell Wright&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric Gordon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Glenn Robinson III&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ish Smith&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jared Sullinger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jerome Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Wall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kalin Lucas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosta Koufos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lorenzo Brown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marreese Speights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mitch McGary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ognjen Kuzmic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quincy Pondexter&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ronnie Price&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shaun Livingston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thaddeus Young&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Troy Daniels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Willie Green&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='color_blind_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Efficiency:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:BMI:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Height:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Offensive Rebounds:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:3 point field goals made:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Steals:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Field Goal percentage\%:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Blocks:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Age:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:STL/TOV:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:3 point field goal attempted:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:PF:qk]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Minutes played:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Free throws attempted:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Assists:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Turnovers:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Field Goals attempted:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Fields Goals made:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Free throws made:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Defensive Rebounds:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:AST/TOV:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Points:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Weight:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Free throw Percentage:qk]&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Games Played:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:3 point field goal percentage:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Rebounds:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Assists' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Assists'>
      <table>
        <view>
          <datasources>
            <datasource caption='players_stats (players_stats)' name='federated.1xu4m0o1jsn1om1d64dpq107rd6i' />
          </datasources>
          <datasource-dependencies datasource='federated.1xu4m0o1jsn1om1d64dpq107rd6i'>
            <column datatype='integer' name='[Assists]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Assists]' derivation='Sum' name='[sum:Assists:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;James Harden&quot;</bucket>
              <bucket>&quot;Stephen Curry&quot;</bucket>
              <bucket>&quot;Russell Westbrook&quot;</bucket>
              <bucket>&quot;LeBron James&quot;</bucket>
              <bucket>&quot;Damian Lillard&quot;</bucket>
              <bucket>&quot;Klay Thompson&quot;</bucket>
              <bucket>&quot;LaMarcus Aldridge&quot;</bucket>
              <bucket>&quot;Anthony Davis&quot;</bucket>
              <bucket>&quot;Kyrie Irving&quot;</bucket>
              <bucket>&quot;Chris Paul&quot;</bucket>
              <bucket>&quot;Monta Ellis&quot;</bucket>
              <bucket>&quot;Blake Griffin&quot;</bucket>
              <bucket>&quot;Gordon Hayward&quot;</bucket>
              <bucket>&quot;Pau Gasol&quot;</bucket>
              <bucket>&quot;Rudy Gay&quot;</bucket>
              <bucket>&quot;Nikola Vucevic&quot;</bucket>
              <bucket>&quot;DeMarcus Cousins&quot;</bucket>
              <bucket>&quot;Marc Gasol&quot;</bucket>
              <bucket>&quot;John Wall&quot;</bucket>
              <bucket>&quot;Andrew Wiggins&quot;</bucket>
              <bucket>&quot;Eric Bledsoe&quot;</bucket>
              <bucket>&quot;Dirk Nowitzki&quot;</bucket>
              <bucket>&quot;Dwyane Wade&quot;</bucket>
              <bucket>&quot;Tyreke Evans&quot;</bucket>
              <bucket>&quot;Jimmy Butler&quot;</bucket>
              <bucket>&quot;Victor Oladipo&quot;</bucket>
              <bucket>&quot;JJ Redick&quot;</bucket>
              <bucket>&quot;Goran Dragic&quot;</bucket>
              <bucket>&quot;Markieff Morris&quot;</bucket>
              <bucket>&quot;Kyle Lowry&quot;</bucket>
              <bucket>&quot;Lou Williams&quot;</bucket>
              <bucket>&quot;Brook Lopez&quot;</bucket>
              <bucket>&quot;Kevin Love&quot;</bucket>
              <bucket>&quot;Paul Millsap&quot;</bucket>
              <bucket>&quot;DeMar DeRozan&quot;</bucket>
              <bucket>&quot;Derrick Favors&quot;</bucket>
              <bucket>&quot;Jeff Green&quot;</bucket>
              <bucket>&quot;Tobias Harris&quot;</bucket>
              <bucket>&quot;Enes Kanter&quot;</bucket>
              <bucket>&quot;Jeff Teague&quot;</bucket>
              <bucket>&quot;Al Horford&quot;</bucket>
              <bucket>&quot;Joe Johnson&quot;</bucket>
              <bucket>&quot;Zach Randolph&quot;</bucket>
              <bucket>&quot;Ty Lawson&quot;</bucket>
              <bucket>&quot;Andre Drummond&quot;</bucket>
              <bucket>&quot;Reggie Jackson&quot;</bucket>
              <bucket>&quot;Mike Conley&quot;</bucket>
              <bucket>&quot;Isaiah Thomas&quot;</bucket>
              <bucket>&quot;Greg Monroe&quot;</bucket>
              <bucket>&quot;Wilson Chandler&quot;</bucket>
              <bucket>&quot;Al Jefferson&quot;</bucket>
              <bucket>&quot;Kemba Walker&quot;</bucket>
              <bucket>&quot;Thaddeus Young&quot;</bucket>
              <bucket>&quot;Avery Bradley&quot;</bucket>
              <bucket>&quot;Tim Duncan&quot;</bucket>
              <bucket>&quot;Brandon Knight&quot;</bucket>
              <bucket>&quot;Kawhi Leonard&quot;</bucket>
              <bucket>&quot;Khris Middleton&quot;</bucket>
              <bucket>&quot;Trevor Ariza&quot;</bucket>
              <bucket>&quot;Kentavious Caldwell-Pope&quot;</bucket>
              <bucket>&quot;Chandler Parsons&quot;</bucket>
              <bucket>&quot;Arron Afflalo&quot;</bucket>
              <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
              <bucket>&quot;Josh Smith&quot;</bucket>
              <bucket>&quot;Jamal Crawford&quot;</bucket>
              <bucket>&quot;Luol Deng&quot;</bucket>
              <bucket>&quot;Marcin Gortat&quot;</bucket>
              <bucket>&quot;Ben McLemore&quot;</bucket>
              <bucket>&quot;Tony Parker&quot;</bucket>
              <bucket>&quot;Trey Burke&quot;</bucket>
              <bucket>&quot;Gerald Henderson&quot;</bucket>
              <bucket>&quot;Michael Carter-Williams&quot;</bucket>
              <bucket>&quot;Carmelo Anthony&quot;</bucket>
              <bucket>&quot;Mo Williams&quot;</bucket>
              <bucket>&quot;Jonas Valanciunas&quot;</bucket>
              <bucket>&quot;Bradley Beal&quot;</bucket>
              <bucket>&quot;Jarrett Jack&quot;</bucket>
              <bucket>&quot;Wesley Matthews&quot;</bucket>
              <bucket>&quot;Aaron Brooks&quot;</bucket>
              <bucket>&quot;Kenneth Faried&quot;</bucket>
              <bucket>&quot;DeAndre Jordan&quot;</bucket>
              <bucket>&quot;Danny Green&quot;</bucket>
              <bucket>&quot;Robert Covington&quot;</bucket>
              <bucket>&quot;CJ Miles&quot;</bucket>
              <bucket>&quot;Dion Waiters&quot;</bucket>
              <bucket>&quot;Chris Bosh&quot;</bucket>
              <bucket>&quot;Draymond Green&quot;</bucket>
              <bucket>&quot;Serge Ibaka&quot;</bucket>
              <bucket>&quot;Corey Brewer&quot;</bucket>
              <bucket>&quot;Kyle Korver&quot;</bucket>
              <bucket>&quot;Derrick Rose&quot;</bucket>
              <bucket>&quot;Rodney Stuckey&quot;</bucket>
              <bucket>&quot;Gerald Green&quot;</bucket>
              <bucket>&quot;Deron Williams&quot;</bucket>
              <bucket>&quot;DeMarre Carroll&quot;</bucket>
              <bucket>&quot;Paul Pierce&quot;</bucket>
              <bucket>&quot;Brandon Bass&quot;</bucket>
              <bucket>&quot;Donatas Motiejunas&quot;</bucket>
              <bucket>&quot;JR Smith&quot;</bucket>
              <bucket>&quot;Marcus Morris&quot;</bucket>
              <bucket>&quot;Jordan Hill&quot;</bucket>
              <bucket>&quot;Carlos Boozer&quot;</bucket>
              <bucket>&quot;Tyler Zeller&quot;</bucket>
              <bucket>&quot;Ryan Anderson&quot;</bucket>
              <bucket>&quot;Nikola Mirotic&quot;</bucket>
              <bucket>&quot;Jeremy Lin&quot;</bucket>
              <bucket>&quot;Harrison Barnes&quot;</bucket>
              <bucket>&quot;Eric Gordon&quot;</bucket>
              <bucket>&quot;Mario Chalmers&quot;</bucket>
              <bucket>&quot;Terrence Ross&quot;</bucket>
              <bucket>&quot;O.J. Mayo&quot;</bucket>
              <bucket>&quot;Tim Hardaway Jr.&quot;</bucket>
              <bucket>&quot;Roy Hibbert&quot;</bucket>
              <bucket>&quot;Marreese Speights&quot;</bucket>
              <bucket>&quot;Anthony Morrow&quot;</bucket>
              <bucket>&quot;Timofey Mozgov&quot;</bucket>
              <bucket>&quot;Kobe Bryant&quot;</bucket>
              <bucket>&quot;Kevin Martin&quot;</bucket>
              <bucket>&quot;Evan Turner&quot;</bucket>
              <bucket>&quot;Zach LaVine&quot;</bucket>
              <bucket>&quot;D.J. Augustin&quot;</bucket>
              <bucket>&quot;Courtney Lee&quot;</bucket>
              <bucket>&quot;Greivis Vasquez&quot;</bucket>
              <bucket>&quot;Tyson Chandler&quot;</bucket>
              <bucket>&quot;Jared Sullinger&quot;</bucket>
              <bucket>&quot;David West&quot;</bucket>
              <bucket>&quot;Dennis Schroder&quot;</bucket>
              <bucket>&quot;Matt Barnes&quot;</bucket>
              <bucket>&quot;Luis Scola&quot;</bucket>
              <bucket>&quot;Wesley Johnson&quot;</bucket>
              <bucket>&quot;Nerlens Noel&quot;</bucket>
              <bucket>&quot;Manu Ginobili&quot;</bucket>
              <bucket>&quot;Nene&quot;</bucket>
              <bucket>&quot;Danilo Gallinari&quot;</bucket>
              <bucket>&quot;Elfrid Payton&quot;</bucket>
              <bucket>&quot;Solomon Hill&quot;</bucket>
              <bucket>&quot;Darren Collison&quot;</bucket>
              <bucket>&quot;Mason Plumlee&quot;</bucket>
              <bucket>&quot;PJ Tucker&quot;</bucket>
              <bucket>&quot;Gorgui Dieng&quot;</bucket>
              <bucket>&quot;Boris Diaw&quot;</bucket>
              <bucket>&quot;Jordan Clarkson&quot;</bucket>
              <bucket>&quot;Bojan Bogdanovic&quot;</bucket>
              <bucket>&quot;Evan Fournier&quot;</bucket>
              <bucket>&quot;Amir Johnson&quot;</bucket>
              <bucket>&quot;Tristan Thompson&quot;</bucket>
              <bucket>&quot;George Hill&quot;</bucket>
              <bucket>&quot;Rudy Gobert&quot;</bucket>
              <bucket>&quot;Kevin Durant&quot;</bucket>
              <bucket>&quot;Amar&apos;e Stoudemire&quot;</bucket>
              <bucket>&quot;Ersan Ilyasova&quot;</bucket>
              <bucket>&quot;Devin Harris&quot;</bucket>
              <bucket>&quot;Nicolas Batum&quot;</bucket>
              <bucket>&quot;Jodie Meeks&quot;</bucket>
              <bucket>&quot;Luc Mbah a Moute&quot;</bucket>
              <bucket>&quot;Kelly Olynyk&quot;</bucket>
              <bucket>&quot;Jason Smith&quot;</bucket>
              <bucket>&quot;Ed Davis&quot;</bucket>
              <bucket>&quot;Wayne Ellington&quot;</bucket>
              <bucket>&quot;Patrick Patterson&quot;</bucket>
              <bucket>&quot;Dwight Howard&quot;</bucket>
              <bucket>&quot;Taj Gibson&quot;</bucket>
              <bucket>&quot;Chris Kaman&quot;</bucket>
              <bucket>&quot;Brandon Jennings&quot;</bucket>
              <bucket>&quot;Jae Crowder&quot;</bucket>
              <bucket>&quot;Hollis Thompson&quot;</bucket>
              <bucket>&quot;Derrick Williams&quot;</bucket>
              <bucket>&quot;Rajon Rondo&quot;</bucket>
              <bucket>&quot;Zaza Pachulia&quot;</bucket>
              <bucket>&quot;Beno Udrih&quot;</bucket>
              <bucket>&quot;Andre Iguodala&quot;</bucket>
              <bucket>&quot;Michael Kidd-Gilchrist&quot;</bucket>
              <bucket>&quot;Jerryd Bayless&quot;</bucket>
              <bucket>&quot;Mike Dunleavy&quot;</bucket>
              <bucket>&quot;Omri Casspi&quot;</bucket>
              <bucket>&quot;Jrue Holiday&quot;</bucket>
              <bucket>&quot;Henry Sims&quot;</bucket>
              <bucket>&quot;Rasual Butler&quot;</bucket>
              <bucket>&quot;J.J. Barea&quot;</bucket>
              <bucket>&quot;Marvin Williams&quot;</bucket>
              <bucket>&quot;Norris Cole&quot;</bucket>
              <bucket>&quot;C.J. Watson&quot;</bucket>
              <bucket>&quot;Patrick Beverley&quot;</bucket>
              <bucket>&quot;Marco Belinelli&quot;</bucket>
              <bucket>&quot;Trevor Booker&quot;</bucket>
              <bucket>&quot;Robin Lopez&quot;</bucket>
              <bucket>&quot;Hassan Whiteside&quot;</bucket>
              <bucket>&quot;Nick Young&quot;</bucket>
              <bucket>&quot;Omer Asik&quot;</bucket>
              <bucket>&quot;James Johnson&quot;</bucket>
              <bucket>&quot;JJ Hickson&quot;</bucket>
              <bucket>&quot;Channing Frye&quot;</bucket>
              <bucket>&quot;Alan Anderson&quot;</bucket>
              <bucket>&quot;Brandan Wright&quot;</bucket>
              <bucket>&quot;Gary Neal&quot;</bucket>
              <bucket>&quot;Jason Terry&quot;</bucket>
              <bucket>&quot;Tony Allen&quot;</bucket>
              <bucket>&quot;Quincy Pondexter&quot;</bucket>
              <bucket>&quot;Steven Adams&quot;</bucket>
              <bucket>&quot;Cory Joseph&quot;</bucket>
              <bucket>&quot;Langston Galloway&quot;</bucket>
              <bucket>&quot;Austin Rivers&quot;</bucket>
              <bucket>&quot;Mike Scott&quot;</bucket>
              <bucket>&quot;Marcus Smart&quot;</bucket>
              <bucket>&quot;Jameer Nelson&quot;</bucket>
              <bucket>&quot;Kevin Seraphin&quot;</bucket>
              <bucket>&quot;Jared Dudley&quot;</bucket>
              <bucket>&quot;Shabazz Muhammad&quot;</bucket>
              <bucket>&quot;Kris Humphries&quot;</bucket>
              <bucket>&quot;Tony Wroten&quot;</bucket>
              <bucket>&quot;Ray McCallum&quot;</bucket>
              <bucket>&quot;Carl Landry&quot;</bucket>
              <bucket>&quot;Lance Stephenson&quot;</bucket>
              <bucket>&quot;Iman Shumpert&quot;</bucket>
              <bucket>&quot;Jason Thompson&quot;</bucket>
              <bucket>&quot;KJ McDaniels&quot;</bucket>
              <bucket>&quot;Joakim Noah&quot;</bucket>
              <bucket>&quot;Anthony Tolliver&quot;</bucket>
              <bucket>&quot;Kyle Singler&quot;</bucket>
              <bucket>&quot;Brian Roberts&quot;</bucket>
              <bucket>&quot;Cody Zeller&quot;</bucket>
              <bucket>&quot;Shane Larkin&quot;</bucket>
              <bucket>&quot;John Henson&quot;</bucket>
              <bucket>&quot;Leandro Barbosa&quot;</bucket>
              <bucket>&quot;Shaun Livingston&quot;</bucket>
              <bucket>&quot;Aron Baynes&quot;</bucket>
              <bucket>&quot;Caron Butler&quot;</bucket>
              <bucket>&quot;Chase Budinger&quot;</bucket>
              <bucket>&quot;Jonas Jerebko&quot;</bucket>
              <bucket>&quot;Otto Porter Jr.&quot;</bucket>
              <bucket>&quot;Lance Thomas&quot;</bucket>
              <bucket>&quot;Alexis Ajinca&quot;</bucket>
              <bucket>&quot;Tony Snell&quot;</bucket>
              <bucket>&quot;Randy Foye&quot;</bucket>
              <bucket>&quot;Tayshaun Prince&quot;</bucket>
              <bucket>&quot;Alexey Shved&quot;</bucket>
              <bucket>&quot;Rodney Hood&quot;</bucket>
              <bucket>&quot;Richard Jefferson&quot;</bucket>
              <bucket>&quot;Isaiah Canaan&quot;</bucket>
              <bucket>&quot;Alex Len&quot;</bucket>
              <bucket>&quot;Andrea Bargnani&quot;</bucket>
              <bucket>&quot;Tiago Splitter&quot;</bucket>
              <bucket>&quot;Jusuf Nurkic&quot;</bucket>
              <bucket>&quot;Spencer Hawes&quot;</bucket>
              <bucket>&quot;CJ McCollum&quot;</bucket>
              <bucket>&quot;Andrew Bogut&quot;</bucket>
              <bucket>&quot;Kosta Koufos&quot;</bucket>
              <bucket>&quot;Al-Farouq Aminu&quot;</bucket>
              <bucket>&quot;Jerami Grant&quot;</bucket>
              <bucket>&quot;Charlie Villanueva&quot;</bucket>
              <bucket>&quot;Ramon Sessions&quot;</bucket>
              <bucket>&quot;Quincy Acy&quot;</bucket>
              <bucket>&quot;Will Barton&quot;</bucket>
              <bucket>&quot;Joe Ingles&quot;</bucket>
              <bucket>&quot;Dante Exum&quot;</bucket>
              <bucket>&quot;Donald Sloan&quot;</bucket>
              <bucket>&quot;Kent Bazemore&quot;</bucket>
              <bucket>&quot;David Lee&quot;</bucket>
              <bucket>&quot;Terrence Jones&quot;</bucket>
              <bucket>&quot;Nikola Pekovic&quot;</bucket>
              <bucket>&quot;JaKarr Sampson&quot;</bucket>
              <bucket>&quot;Vince Carter&quot;</bucket>
              <bucket>&quot;Jose Calderon&quot;</bucket>
              <bucket>&quot;Darrell Arthur&quot;</bucket>
              <bucket>&quot;Marcus Thornton&quot;</bucket>
              <bucket>&quot;Tarik Black&quot;</bucket>
              <bucket>&quot;Kirk Hinrich&quot;</bucket>
              <bucket>&quot;Alec Burks&quot;</bucket>
              <bucket>&quot;Pero Antic&quot;</bucket>
              <bucket>&quot;Andre Miller&quot;</bucket>
              <bucket>&quot;Patty Mills&quot;</bucket>
              <bucket>&quot;Steve Blake&quot;</bucket>
              <bucket>&quot;Ben Gordon&quot;</bucket>
              <bucket>&quot;Shawne Williams&quot;</bucket>
              <bucket>&quot;Dante Cunningham&quot;</bucket>
              <bucket>&quot;Mirza Teletovic&quot;</bucket>
              <bucket>&quot;Ish Smith&quot;</bucket>
              <bucket>&quot;Cole Aldrich&quot;</bucket>
              <bucket>&quot;Ryan Kelly&quot;</bucket>
              <bucket>&quot;Meyers Leonard&quot;</bucket>
              <bucket>&quot;Kevin Garnett&quot;</bucket>
              <bucket>&quot;Damjan Rudez&quot;</bucket>
              <bucket>&quot;Chris Andersen&quot;</bucket>
              <bucket>&quot;Nik Stauskas&quot;</bucket>
              <bucket>&quot;Matthew Dellavedova&quot;</bucket>
              <bucket>&quot;Lavoy Allen&quot;</bucket>
              <bucket>&quot;James Ennis III&quot;</bucket>
              <bucket>&quot;Chris Copeland&quot;</bucket>
              <bucket>&quot;Thomas Robinson&quot;</bucket>
              <bucket>&quot;Jabari Parker&quot;</bucket>
              <bucket>&quot;Robert Sacre&quot;</bucket>
              <bucket>&quot;Willie Green&quot;</bucket>
              <bucket>&quot;Bismack Biyombo&quot;</bucket>
              <bucket>&quot;Shelvin Mack&quot;</bucket>
              <bucket>&quot;Anthony Bennett&quot;</bucket>
              <bucket>&quot;Jeremy Lamb&quot;</bucket>
              <bucket>&quot;Miles Plumlee&quot;</bucket>
              <bucket>&quot;Kyle O&apos;Quinn&quot;</bucket>
              <bucket>&quot;Glen Davis&quot;</bucket>
              <bucket>&quot;Jon Leuer&quot;</bucket>
              <bucket>&quot;Thabo Sefolosha&quot;</bucket>
              <bucket>&quot;Drew Gooden&quot;</bucket>
              <bucket>&quot;Shawn Marion&quot;</bucket>
              <bucket>&quot;Pablo Prigioni&quot;</bucket>
              <bucket>&quot;Nick Collison&quot;</bucket>
              <bucket>&quot;Tyler Hansbrough&quot;</bucket>
              <bucket>&quot;Ian Mahinmi&quot;</bucket>
              <bucket>&quot;Matt Bonner&quot;</bucket>
              <bucket>&quot;Udonis Haslem&quot;</bucket>
              <bucket>&quot;Shabazz Napier&quot;</bucket>
              <bucket>&quot;Lou Amundson&quot;</bucket>
              <bucket>&quot;Luke Babbitt&quot;</bucket>
              <bucket>&quot;Anderson Varejao&quot;</bucket>
              <bucket>&quot;PJ Hairston&quot;</bucket>
              <bucket>&quot;Justin Holiday&quot;</bucket>
              <bucket>&quot;James Jones&quot;</bucket>
              <bucket>&quot;Elijah Millsap&quot;</bucket>
              <bucket>&quot;Kendrick Perkins&quot;</bucket>
              <bucket>&quot;TJ Warren&quot;</bucket>
              <bucket>&quot;Nick Calathes&quot;</bucket>
              <bucket>&quot;Aaron Gordon&quot;</bucket>
              <bucket>&quot;Alonzo Gee&quot;</bucket>
              <bucket>&quot;Nate Robinson&quot;</bucket>
              <bucket>&quot;Hedo Turkoglu&quot;</bucket>
              <bucket>&quot;Archie Goodwin&quot;</bucket>
              <bucket>&quot;Andre Roberson&quot;</bucket>
              <bucket>&quot;Jabari Brown&quot;</bucket>
              <bucket>&quot;Ricky Rubio&quot;</bucket>
              <bucket>&quot;Ronnie Price&quot;</bucket>
              <bucket>&quot;Justin Hamilton&quot;</bucket>
              <bucket>&quot;Dorell Wright&quot;</bucket>
              <bucket>&quot;Markel Brown&quot;</bucket>
              <bucket>&quot;Dewayne Dedmon&quot;</bucket>
              <bucket>&quot;Adreian Payne&quot;</bucket>
              <bucket>&quot;Michael Beasley&quot;</bucket>
              <bucket>&quot;Cleanthony Early&quot;</bucket>
              <bucket>&quot;Garrett Temple&quot;</bucket>
              <bucket>&quot;Jason Maxiell&quot;</bucket>
              <bucket>&quot;Mitch McGary&quot;</bucket>
              <bucket>&quot;Festus Ezeli&quot;</bucket>
              <bucket>&quot;Travis Wear&quot;</bucket>
              <bucket>&quot;Robbie Hummel&quot;</bucket>
              <bucket>&quot;Mike Muscala&quot;</bucket>
              <bucket>&quot;Larry Sanders&quot;</bucket>
              <bucket>&quot;Andrew Nicholson&quot;</bucket>
              <bucket>&quot;Tyler Johnson&quot;</bucket>
              <bucket>&quot;Luke Ridnour&quot;</bucket>
              <bucket>&quot;Gary Harris&quot;</bucket>
              <bucket>&quot;Danny Granger&quot;</bucket>
              <bucket>&quot;Perry Jones III&quot;</bucket>
              <bucket>&quot;Joey Dorsey&quot;</bucket>
              <bucket>&quot;Cory Jefferson&quot;</bucket>
              <bucket>&quot;Kostas Papanikolaou&quot;</bucket>
              <bucket>&quot;Jimmer Fredette&quot;</bucket>
              <bucket>&quot;Phil Pressey&quot;</bucket>
              <bucket>&quot;Troy Daniels&quot;</bucket>
              <bucket>&quot;Reggie Evans&quot;</bucket>
              <bucket>&quot;Henry Walker&quot;</bucket>
              <bucket>&quot;Jason Richardson&quot;</bucket>
              <bucket>&quot;Joel Freeland&quot;</bucket>
              <bucket>&quot;Allen Crabbe&quot;</bucket>
              <bucket>&quot;Jordan Farmar&quot;</bucket>
              <bucket>&quot;Chris Johnson&quot;</bucket>
              <bucket>&quot;Maurice Harkless&quot;</bucket>
              <bucket>&quot;Sergey Karasev&quot;</bucket>
              <bucket>&quot;E&apos;Twaun Moore&quot;</bucket>
              <bucket>&quot;Erick Green&quot;</bucket>
              <bucket>&quot;Spencer Dinwiddie&quot;</bucket>
              <bucket>&quot;Brandon Davies&quot;</bucket>
              <bucket>&quot;Jerome Jordan&quot;</bucket>
              <bucket>&quot;Ryan Hollins&quot;</bucket>
              <bucket>&quot;Jeff Ayres&quot;</bucket>
              <bucket>&quot;Joe Harris&quot;</bucket>
              <bucket>&quot;John Jenkins&quot;</bucket>
              <bucket>&quot;Sebastian Telfair&quot;</bucket>
              <bucket>&quot;AJ Price&quot;</bucket>
              <bucket>&quot;Austin Daye&quot;</bucket>
              <bucket>&quot;Samuel Dalembert&quot;</bucket>
              <bucket>&quot;Jeffery Taylor&quot;</bucket>
              <bucket>&quot;Lorenzo Brown&quot;</bucket>
              <bucket>&quot;Tyler Ennis&quot;</bucket>
              <bucket>&quot;Kendall Marshall&quot;</bucket>
              <bucket>&quot;Mike Miller&quot;</bucket>
              <bucket>&quot;Doug McDermott&quot;</bucket>
              <bucket>&quot;Raymond Felton&quot;</bucket>
              <bucket>&quot;Martell Webster&quot;</bucket>
              <bucket>&quot;JaVale McGee&quot;</bucket>
              <bucket>&quot;James Young&quot;</bucket>
              <bucket>&quot;Gigi Datome&quot;</bucket>
              <bucket>&quot;Johnny O&apos;Bryant III&quot;</bucket>
              <bucket>&quot;John Lucas III&quot;</bucket>
              <bucket>&quot;Jeff Withey&quot;</bucket>
              <bucket>&quot;Elton Brand&quot;</bucket>
              <bucket>&quot;Jordan Adams&quot;</bucket>
              <bucket>&quot;Joffrey Lauvergne&quot;</bucket>
              <bucket>&quot;Furkan Aldemir&quot;</bucket>
              <bucket>&quot;Ricky Ledo&quot;</bucket>
              <bucket>&quot;Jeremy Evans&quot;</bucket>
              <bucket>&quot;Dwight Powell&quot;</bucket>
              <bucket>&quot;Joel Anthony&quot;</bucket>
              <bucket>&quot;Noah Vonleh&quot;</bucket>
              <bucket>&quot;Darius Morris&quot;</bucket>
              <bucket>&quot;Greg Smith&quot;</bucket>
              <bucket>&quot;Bryce Cotton&quot;</bucket>
              <bucket>&quot;Nick Johnson&quot;</bucket>
              <bucket>&quot;Kyle Anderson&quot;</bucket>
              <bucket>&quot;Glenn Robinson III&quot;</bucket>
              <bucket>&quot;Josh McRoberts&quot;</bucket>
              <bucket>&quot;Reggie Bullock&quot;</bucket>
              <bucket>&quot;Steve Novak&quot;</bucket>
              <bucket>&quot;JaMychal Green&quot;</bucket>
              <bucket>&quot;James Michael McAdoo&quot;</bucket>
              <bucket>&quot;Jeff Adrien&quot;</bucket>
              <bucket>&quot;Tim Frazier&quot;</bucket>
              <bucket>&quot;Shayne Whittington&quot;</bucket>
              <bucket>&quot;Jarnell Stokes&quot;</bucket>
              <bucket>&quot;Ian Clark&quot;</bucket>
              <bucket>&quot;DeJuan Blair&quot;</bucket>
              <bucket>&quot;Paul George&quot;</bucket>
              <bucket>&quot;Jorge Gutierrez&quot;</bucket>
              <bucket>&quot;Dwight Buycks&quot;</bucket>
              <bucket>&quot;Toney Douglas&quot;</bucket>
              <bucket>&quot;Chuck Hayes&quot;</bucket>
              <bucket>&quot;Larry Drew II&quot;</bucket>
              <bucket>&quot;Landry Fields&quot;</bucket>
              <bucket>&quot;Malcolm Thomas&quot;</bucket>
              <bucket>&quot;Francisco Garcia&quot;</bucket>
              <bucket>&quot;Bernard James&quot;</bucket>
              <bucket>&quot;Nate Wolters&quot;</bucket>
              <bucket>&quot;John Salmons&quot;</bucket>
              <bucket>&quot;Jannero Pargo&quot;</bucket>
              <bucket>&quot;CJ Wilcox&quot;</bucket>
              <bucket>&quot;Jordan Hamilton&quot;</bucket>
              <bucket>&quot;Reggie Williams&quot;</bucket>
              <bucket>&quot;Elliot Williams&quot;</bucket>
              <bucket>&quot;Devyn Marble&quot;</bucket>
              <bucket>&quot;Cartier Martin&quot;</bucket>
              <bucket>&quot;Jared Cunningham&quot;</bucket>
              <bucket>&quot;Gerald Wallace&quot;</bucket>
              <bucket>&quot;Brendan Haywood&quot;</bucket>
              <bucket>&quot;Earl Barron&quot;</bucket>
              <bucket>&quot;Clint Capela&quot;</bucket>
              <bucket>&quot;Russ Smith&quot;</bucket>
              <bucket>&quot;Brandon Rush&quot;</bucket>
              <bucket>&quot;Quincy Miller&quot;</bucket>
              <bucket>&quot;Ekpe Udoh&quot;</bucket>
              <bucket>&quot;Zoran Dragic&quot;</bucket>
              <bucket>&quot;Nazr Mohammed&quot;</bucket>
              <bucket>&quot;Jack Cooley&quot;</bucket>
              <bucket>&quot;Earl Clark&quot;</bucket>
              <bucket>&quot;Arinze Onuaku&quot;</bucket>
              <bucket>&quot;Victor Claver&quot;</bucket>
              <bucket>&quot;Shavlik Randolph&quot;</bucket>
              <bucket>&quot;Will Bynum&quot;</bucket>
              <bucket>&quot;Vander Blue&quot;</bucket>
              <bucket>&quot;Sean Kilpatrick&quot;</bucket>
              <bucket>&quot;Dahntay Jones&quot;</bucket>
              <bucket>&quot;Xavier Henry&quot;</bucket>
              <bucket>&quot;Shannon Brown&quot;</bucket>
              <bucket>&quot;Ognjen Kuzmic&quot;</bucket>
              <bucket>&quot;Kenyon Martin&quot;</bucket>
              <bucket>&quot;Chris Douglas-Roberts&quot;</bucket>
              <bucket>&quot;Lester Hudson&quot;</bucket>
              <bucket>&quot;Drew Gordon&quot;</bucket>
              <bucket>&quot;Grant Jerrett&quot;</bucket>
              <bucket>&quot;Will Cherry&quot;</bucket>
              <bucket>&quot;Greg Stiemsma&quot;</bucket>
              <bucket>&quot;Glen Rice&quot;</bucket>
              <bucket>&quot;Cameron Bairstow&quot;</bucket>
              <bucket>&quot;Bruno Caboclo&quot;</bucket>
              <bucket>&quot;Jerel McNeal&quot;</bucket>
              <bucket>&quot;Miroslav Raduljica&quot;</bucket>
              <bucket>&quot;David Stockton&quot;</bucket>
              <bucket>&quot;Toure&apos; Murry&quot;</bucket>
              <bucket>&quot;Patrick Christopher&quot;</bucket>
              <bucket>&quot;Lucas Nogueira&quot;</bucket>
              <bucket>&quot;Gal Mekel&quot;</bucket>
              <bucket>&quot;Tyrus Thomas&quot;</bucket>
              <bucket>&quot;Alex Kirk&quot;</bucket>
              <bucket>&quot;Jamaal Franklin&quot;</bucket>
              <bucket>&quot;Andrei Kirilenko&quot;</bucket>
              <bucket>&quot;Andre Dawkins&quot;</bucket>
              <bucket>&quot;Sim Bhullar&quot;</bucket>
              <bucket>&quot;Julius Randle&quot;</bucket>
              <bucket>&quot;Darius Miller&quot;</bucket>
              <bucket>&quot;Seth Curry&quot;</bucket>
              <bucket>&quot;Ronny Turiaf&quot;</bucket>
              <bucket>&quot;Kalin Lucas&quot;</bucket>
              <bucket>&quot;Jerrelle Benimon&quot;</bucket>
              <bucket>&quot;David Wear&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Assists:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{4340F6E0-DDA1-4E32-96FE-F1969F2EAE57}' />
    </worksheet>
    <worksheet name='Experience'>
      <table>
        <view>
          <datasources>
            <datasource caption='players_stats (players_stats)' name='federated.1xu4m0o1jsn1om1d64dpq107rd6i' />
          </datasources>
          <datasource-dependencies datasource='federated.1xu4m0o1jsn1om1d64dpq107rd6i'>
            <column datatype='integer' name='[Efficiency]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Games Played]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Minutes played]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Efficiency]' derivation='Sum' name='[sum:Efficiency:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Games Played]' derivation='Sum' name='[sum:Games Played:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Minutes played]' derivation='Sum' name='[sum:Minutes played:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Efficiency:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Games Played:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Minutes played:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[Action (Name)]'>
            <groupfilter function='level-members' level='[Name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[:Measure Names]</column>
            <column>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[Action (Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Efficiency:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[:Measure Names]' />
              <lod column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2083977460861206' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-transparency' value='254' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[Multiple Values]</rows>
        <cols>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]</cols>
      </table>
      <simple-id uuid='{4508B19A-A130-4FC5-B684-E4E653733255}' />
    </worksheet>
    <worksheet name='Games Played'>
      <table>
        <view>
          <datasources>
            <datasource caption='players_stats (players_stats)' name='federated.1xu4m0o1jsn1om1d64dpq107rd6i' />
          </datasources>
          <datasource-dependencies datasource='federated.1xu4m0o1jsn1om1d64dpq107rd6i'>
            <column datatype='integer' name='[Games Played]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Games Played]' derivation='Sum' name='[sum:Games Played:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[Action (Name)]'>
            <groupfilter function='level-members' level='[Name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[Action (Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Games Played:qk]</rows>
        <cols>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]</cols>
      </table>
      <simple-id uuid='{354B82E8-BCBC-4C6F-B86F-0B5BA2B13683}' />
    </worksheet>
    <worksheet name='Physique'>
      <table>
        <view>
          <datasources>
            <datasource caption='players_stats (players_stats)' name='federated.1xu4m0o1jsn1om1d64dpq107rd6i' />
          </datasources>
          <datasource-dependencies datasource='federated.1xu4m0o1jsn1om1d64dpq107rd6i'>
            <column datatype='real' name='[BMI]' role='measure' type='quantitative' />
            <column datatype='real' name='[Height]' role='measure' type='quantitative' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='real' name='[Weight]' role='measure' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[BMI]' derivation='Sum' name='[sum:BMI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Height]' derivation='Sum' name='[sum:Height:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Weight]' derivation='Sum' name='[sum:Weight:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[Action (Name)]'>
            <groupfilter function='level-members' level='[Name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]'>
            <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Team:nk]' direction='ASC' using='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Weight:qk]' />
          <filter class='quantitative' column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Height:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Weight:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]</column>
            <column>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[Action (Name)]</column>
            <column>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Height:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Weight:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
                <format attr='density-intensity' value='0.35579109191894531' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#1b1b1b' />
                <format attr='density-kernel-size' value='1.6591712236404419' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='shape' value=':filled/times' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Height:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.91154694557189941' />
                <format attr='density-intensity' value='0.24771404266357422' />
                <format attr='shape' value=':filled/times' />
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:BMI:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Team:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.263370156288147' />
                <format attr='density-intensity' value='0.22682571411132813' />
                <format attr='shape' value=':filled/times' />
                <format attr='mark-color' value='#72b966' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Weight:qk] + ([federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Height:qk] + [federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:BMI:qk]))</rows>
        <cols>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]</cols>
      </table>
      <simple-id uuid='{285A8D84-E168-4404-BD35-CF7368C9142D}' />
    </worksheet>
    <worksheet name='Points'>
      <table>
        <view>
          <datasources>
            <datasource caption='players_stats (players_stats)' name='federated.1xu4m0o1jsn1om1d64dpq107rd6i' />
          </datasources>
          <datasource-dependencies datasource='federated.1xu4m0o1jsn1om1d64dpq107rd6i'>
            <column datatype='string' name='[Experience]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Points]' role='measure' type='quantitative' />
            <column-instance column='[Experience]' derivation='None' name='[none:Experience:nk]' pivot='key' type='nominal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Points]' derivation='Sum' name='[sum:Points:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[Action (Name)]'>
            <groupfilter function='level-members' level='[Name]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[Action (Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Points:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Experience:nk] / [federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{66B7C893-030E-47FC-9E8C-14997F8ACE3A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98076' id='20' param='horz' type='layout-flow' w='99038' x='481' y='962'>
            <zone h='98076' id='17' param='vert' type='layout-flow' w='89423' x='481' y='962'>
              <zone fixed-size='62' h='8414' id='18' is-fixed='true' type='title' w='89423' x='481' y='962'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='89662' id='15' param='vert' type='layout-flow' w='89423' x='481' y='9376'>
                <zone h='89662' id='13' param='vert' type='layout-flow' w='89423' x='481' y='9376'>
                  <zone h='89662' id='9' param='horz' type='layout-flow' w='89423' x='481' y='9376'>
                    <zone h='89662' id='7' type='layout-basic' w='89423' x='481' y='9376'>
                      <zone h='44808' id='3' name='Games Played' w='41326' x='481' y='9376'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='44808' id='5' name='Points' w='48097' x='41807' y='9376'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='44854' id='6' name='Assists' w='22925' x='481' y='54184'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='44854' id='11' name='Physique' w='33241' x='23406' y='54184'>
                        <layout-cache cell-count-w='490' minheight='438' non-cell-size-w='79' type-h='scalable' type-w='cell' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='44854' id='22' name='Experience' w='33257' x='56647' y='54184'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98076' id='19' is-fixed='true' param='vert' type='layout-flow' w='9615' x='89904' y='962'>
              <zone h='3246' id='21' name='Assists' pane-specification-id='0' param='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Assists:qk]' type='color' w='9615' x='89904' y='962'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='32' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98076' id='31' param='vert' type='layout-flow' w='99038' x='481' y='962'>
                <zone fixed-size='62' h='8414' id='18' type='title' w='89423' x='481' y='962'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44808' id='3' is-fixed='true' name='Games Played' w='41326' x='481' y='9376'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44808' id='5' is-fixed='true' name='Points' w='48097' x='41807' y='9376'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44854' id='6' is-fixed='true' name='Assists' w='22925' x='481' y='54184'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3246' id='21' name='Assists' pane-specification-id='0' param='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Assists:qk]' type='color' w='9615' x='89904' y='962'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44854' id='11' is-fixed='true' name='Physique' w='33241' x='23406' y='54184'>
                  <layout-cache cell-count-w='490' minheight='438' non-cell-size-w='79' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44854' id='22' is-fixed='true' name='Experience' w='33257' x='56647' y='54184'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BDED9ADE-0AA4-48A8-B91F-0B78D27AB5D9}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Games Played'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5ABED19-3261-4C22-A5C9-279AD898AF06}' />
    </window>
    <window class='worksheet' name='Points'>
      <cards>
        <edge name='left'>
          <strip size='195'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[:Measure Names]</field>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[Action (Name)]</field>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Experience:nk]</field>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]</field>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Age:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1F241AA-A548-4E5E-9B4C-A1BC567DE4CA}' />
    </window>
    <window class='worksheet' name='Assists'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Assists:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]</field>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Assists:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A267EFC0-BDE4-46EA-A122-B160F4ABA3DF}' />
    </window>
    <window class='worksheet' name='Physique'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]</field>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[sum:Games Played:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F7B517B-2D5D-4356-9FF9-09597F92D120}' />
    </window>
    <window class='worksheet' name='Experience'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[:Measure Names]</field>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Experience:nk]</field>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Name:nk]</field>
            <field>[federated.1xu4m0o1jsn1om1d64dpq107rd6i].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06548A8A-2325-4039-B795-8EA08ADD4609}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Assists' />
        <viewpoint name='Experience'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Games Played' />
        <viewpoint name='Physique'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Points' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{997FBCA4-9DBF-4FA8-8B53-725863FDD133}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Assists' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Z5Bk2Xmm91yf3lZl+aqu9j2mZ3oM3AwwcAQwC4IEQBLL1WKlkDZC1Cqk
      iI0QgwqFFBJl/shQwdjY5Qa11Eq7sSRFEgsaEIbAzAAch7E9095Wl69K7zOvv1c/sqq6sjKz
      KrsbwMyA/Ub0j87Muvdk3vOd85n3e4/g+77PfdzH31GI7/UA7uM+3kvcN4D7+DuN+wZwH3+n
      Ib/XA7iPXvi+j+N5FHUd3XGIaxrJQABREN7rof3c4b4BvM/g+z5FQ+fFtTXKhgF0tum5WJyn
      p6YIyPcf2U8S912ge4Dv+7Rsi4qp4/reT+Sahuvyo9XVnckP4AGL9RpvZDfx7iftfqK4v5zc
      JXzfZ6NV50Ipi+t7jIWinBmZBAHwQXdtgrKCJNzZGrPWaFA1zb7vLdZqnMmMEVXVnvcs1+VG
      tURebxGWVY4n08RVDeG+27Qv7hvAXcIHlhoVnK2VP9ducLNepGy00SSZstlmNprkWGyEtVaV
      iqlzJJYmrGi4vsdSvULTtpiLJoipGp4PPj4VUx94T8f3ado2VdMgr7dQRYmZaIy4qnGumGW5
      UQOghE7RaPOp6UMEZeVn8XN8YHHfAO4Avu+T05tcr5YAsF1n5z1JEPF9aDsWLh4ePhWzTd5o
      cr1awPE9JEHgwdQEy/UKV6sFAPJ6k1QggOv7pLQgdXuwAUiCwJVykc1Wg21H6GqlxOOZcTZa
      ja7Pth2bfLvFXCzxk/0Rfs5w3wDuAG3H5q38Ou6WHy4Ao8EQbduh2HR4rpCnopsokkgiKHN6
      LExebxCUFQzXQRREykabhm3tXNPyXCqmjiBATNWYDEco6zY10+q5f0xTuyY/gOm6nC/m+463
      aLSwfJvD0TSu76GI0n2XaA/uG8AdoGmbO5MfOm5QTA7z4uIaxbbR9dmSbrJcbfPkVJrPzc+w
      2qxxq1ZioVYmHQihihKW5zIZijEViVHQm6w26tiey0hIRUSgshULbGeBEgGVq5VSz7h0x2Em
      GiXbbu68FlFUWo5B2WrStE3KRpupcJyTybGfym/zQcV9A+gD3/fx8BER8HyfjVaDhm0RlGVk
      UcTxOn6/78E3ry5TN+2+13E8n9dWi0xHYrS82yt3y7Z4auIQl8pZapZB1FQBAWPLpWo5Jh+f
      nsHzOpM7qqrENJWVer3vfWRR5MzoOOutBquNOsW2gSeK6D6MhKLojonje2TbDQzXISgrHIuP
      IO4J0H3fx6ezs/1d2SnuG8Ae+L7PrUaJnN7kaGyElXqNpa3gctvlCSkKoiBws9gaOPl3rgd8
      d2GVL54Yp+V03JqEFqRstMltrdhXqwWSWnDnbwQgIMnEQwHKhs65wiZtxyYgy2iShOm6XfeY
      jyUIyQpROcBKNUvTtsnT2T1ulOvMxSPMxqPIosR6u4YoCMxEEoTk29kk3/dZaVbZbNeYDMeZ
      CSf+ThjBfQPYA3drpWw5FrfqJTaa7Z33fKBsGJwZnSAkKzx/8/xQ12xaNgEhyImERrbVJCJr
      VE0d34ftOTYZjiEKAm3HJq52gmLH83gzt0bb6RiZZbnEVBVJCFAyOsHyfCzB6ZEMhuvyvcUl
      mna3QfrAUq3JfCzBWChIwWgyHoqiijK256I7NpIost6qst6qY7oOhuuQ1sJstprojsNIMMRY
      KPxzWYn+uTYAH2hYJtcrJVqOzWgwxLFECkWU+n7e8VzeLqzi+z4z4QSaqLDWaHV9xvU9HM/D
      cF2altP3Ov2Qa7WRZYei0Savt5EEgYAsIQkwGoowG0kwG03wdn6d9VaD9VaDlBZEd7ontOu7
      TISj1CwDx/PI6U2y7TA1w+6Z/LvxTr7AIVvDcl0s1+W13BIxNYDhOkiInXhGCVD2WohIfHdp
      Ad25/f0OxeJ8bHL6jusa73f8XBuAbtv8cG1xx2XItZtUDJ2PTcwgCMJWVdVnrVmnZOiEZJmG
      baGKEgICumv3uBxRVSOsqLiez50siAW9haLcvo7r+yiCzLFkiuVGhXOlTWYiCTZ3BbLlPjUB
      2/O5Ui7uiids3sptEBAD+96/bdsoYhjbcxGFzndzDSjqJtbW94urGk+OT/FWNts1+QGW6jUm
      w1EOxxO4vo/n+yii+IF3k36uDWCxXunxl9dbDUpGm6iqcbmyieBLOz4+0AlYbZMbtU62JSQr
      hGSFpm1hOB5N0+H7y4tMhCMkAiote7hdIBVUaTjdE7rlWFyu5LA9j+rWir4XD6QzLNUqGK5D
      TNXwEdGd7l3J8jxcrzdtuhuKJDEdiXO9WqBp2TycmuTVjbWdyQ9Qs0zOFwoDK9EbrQaKJHC5
      UsDxPKbCUR5OjyOLH9xd4YM78iFg95lQALcaJW7U8iiiTMXsTl/m262dYBXAxeej4zNE5AC6
      7VK3LIq6zoVigbAG0hAL4Fw8wunR0R4fOq4G8HYl9VVJYioc2/n/ZDjK0Xiaj08d4sH0GMcS
      IwQHkOHmYjH2G8pkJMzVSp62Y1M0Wlwu53sWB4CaZeDTn29kuS4XSjl0x8b2XJYanbjhg4yf
      awOYDEd7XtMkiYCkUjVtRCQ0qXtChRWFxK6MzEggRMnQWWs09l4KRRYYi2r7jiGkyHz1xDyZ
      UJiH0hlCsoIiisRUjfl4kolQFFEQCEoyk6EYQUkhKClMhWI8OjJB27F5eWOFdwpZfpxdI9du
      9Ty0iKJyemSUM2OZvmOIqSofmRhnd/erKAh9DSYoK0xHYz2vC8B4ONyzSzWt/rvFBwUfWBfI
      dl1u1ao7vvvhRBLTtWnaJrORJLrjYLoOM5EY+XYLy/OIaxqqJLJQKwMdv3wqHCOmarRsC3wB
      VQgguCIBfGZiEY4kklwoFAasiXBqJM7huMhr6zkcr/tTIyGNz8xPElYlBOBoPMV4KMIrG2ts
      NttsNldQJYkTySRHEkley65T3dqRqqaJ4boEZJnarklmey6pYBARgbbjEJBkxkIR8u02j2ZG
      SWga5wtFGpaFIoqMBIPMxqJsttqkA1HKZhNVkngkPclFocDKLvcP4HgixXQkhuN5bDQ7tQtF
      FJmJRcmEQmT1BvWt8UiCwGgo/BN5nu8VhA9iU7ztujy3skjRuO1Tq6LEaFjFFzxG1BjXKqWd
      qu1IMMRHxqdQJYkfrS/upBUBUlqQJzPTfPvmMudyZQzn9goXURWenh5jNKryTj7Xdyzz8Tif
      mJqhqBtcK1Wp6BayJNByDSzfxvd9JFHkSDzBmdFxXt1YY6nePelEQeBEMsVio9Jz/aAs97gq
      mWCYpydnWahWeT27sfO+Jkl8eHyCI4kklutypVTmzWwOY+t9AZiKRviFuVmiqortuVwpF1lt
      1PF8n+OJNMeSKQRBwPd9Cu0WV6tFNEkipEiMBaMYrsPVSoGQrDISDBFRVDLBCGWjRUILEZDk
      D1Rg/IHcAa5VSl2THzqcmrrhcHo0w5vZTbxda3ZRb7NYr/JQOkNQVroMQBFl/ujiAldL1Z77
      NC2b791aYz4RIR4Sd5if2xCA+XinYDQaCjIa6rhON6plXs/e9o0dz+NapYwqSqw2en1mz/e5
      Va/0zSoFZaXHAEaCIaqmwSsba13UDNN1eXl9jbgWoG5avLS+0fV3PrDWaPK9xWW+euwIIOC6
      IqW2Q8uyyTY2uVlp8OGJMeIBlWvVwg47VRIEFEFmuVHBw0cQfCpmi7VWhfVWjbptkNZCPDYy
      3fsl3sf4QBpAQW/3fd1wXSzX65r828i3WzhJj4lQlIZl4vk+MU2j0HD6Tv7dWKw2eSSQQJWF
      nayJAISkAIvlFqtVnelYiJlYBFEQ+k5ygJWtlbYfRgNhSmara+SyIPJEZpIr5cIOz2ciHOVo
      PMW5Qr5r8m/DA65XyqzWWz3vbWOz1WKp3mC5VudisbRzT8vzuFmtkm21+MTMBFXrdoLA9X2W
      GpWdALlhmRyNpxG36N+iIyAKAhvtGiOBCFXD4lqpStkw0SSJuXiUo8kYqtS/BvNe4QNpAHsD
      123IokhY6c9/b9k231u+gem6HVcgEuP0yDj/58KFoe65VtP5J4+fItdu8+pajnc2K+j2bcPp
      uBdhvnrq0MBJrkoScS2w4+fvxnw8waQX4WIpj+f7BCSZM6PjxFWNI/E0FcOiYVk0TJtCu921
      i+1F2TAGpjK3cTaXJ9tq9Y1tmrbN27kCEU3oWkwywTBls43teciixJVyeYe/lNQCyKLItWqe
      N9tFrpcaWO7tHfNstsBUNMyXjh0iFXj/NOp8ILNARxNJxD45jMlIFFWSiCrdHVMCYLr2jivh
      A2vNOhcLxb60434o6Sa253N2o8KPV4rodrdb0nEvWvyLNy+zXOnP6Z+KRPnoxBSBPQY8H0sQ
      VVXWmw18H0Q65LaZaJzNVovvLd4i22rRsm1WGw2+v7xIxeg1om2MBIMHTrCiruPtE/1VdJPp
      SAJNkhAFAVmQcDwYCUR5KDWO7fo7kx+gYhoogorqR7iUr3VN/t2/z19eX8RwetOv7xU+UEGw
      7/ssNypk9Qa+J7DRbHe4LIJIMqDh4uB4HpIgEpAUHM8nKCuMhkJcKvXhzHsyr6/2Bp6D8MTE
      KC8sbhz4OUkQeObwCJ7o4vl+h9wmqqiCSlm3MF0HH48jqSgnU0nGwxF+tLZMXr/ttsiCyGdn
      53lxrbs/ePc9VEmivadiG1EUvnT4KN9dXGK9OdgNiqsq1X2MXxIEvnbyGBFF4e38RtfY0oEg
      Bb3ds3sk1CBX8k0a1v4EwS8cnuGJif4p25813vcukE8n12y6Dpokc6XamciKKPKLh49iex6K
      KPJadpXK1gN1fI+gIvPR8VlEQaBlW1wpFXpig/FwCIHKwBTnXry62j8TtBeu75Or23z99FEq
      psHr6wXOZqs9adLNhoEqqIQUpWuCbX+HK+UitQGujOv7fGRikqV6jWyrheN13KaTqRFqhs3j
      Y2PkWos4fda348kOe/SdfGHgd1AliZCsYHsuJaM75ioZ/Xe4puUcOPkBbpRr9w1gWOTaDd4p
      buD5Pkk1iCx0sjGKKCELIpoi43heT4HGcl3WGg3WG01s30MSJBzP3qnGRhSVx8bGeX21TLY1
      uA1xGyLc0dZ9vVRHFSWuFupcyPU3Mt1x+e7CKg3b7GKGbsP3/Y4rM2CTjmsaz0zPcqlQ5vnF
      DXKtGq+vVBAFgVRQYyoWxMbZIclJgsDDoyN8ZGKcimFysVgaWC0/FI8iiwKm4/XENJ0YKspa
      83ZxMCDJjGhRLtNbMNyL9pD0kZ8F3vcGsNas7TyAqqXzcGqCV9Y3udpo8vLiuyiiyFw8wkhE
      3hZkACDfMrlWXGT349UkkWPJKGPhMIdiCVRJ5rPz0/zhxRv77gKSIHAsFeeN9cEr5l7Ynse5
      XJkfr+f2vbbn+7y1UeToaHDX6Ds4FE9guh7LfRph0oEAUVXjhcUN/ubWatfu4vo+uZZOrqVz
      Ih3nV44fRRZFEgENdYvAlgkFeWqq81vuNYK4puILNi+s3SKiqj2p45CsMh6IU2w6bLaajISC
      fGR8irbldD2DQYhpvaoW7xXelwZQt0xuVssYjoPpOTsroecJ/MW1VTab3VtyNV9GyMPpsQQP
      jyXINnWu1ntTm6brUTNdnppMIW0RuB4ZS5FrTfHc4nrfBycK8OzRGVRRuiMDALhSqvS4Pf3Q
      tl1CooYtWFsxjMBcJIFjC4wHYmw22pievRPYhhWFp6dmuF6q9Uz+vbhWqpFezfMrp+a7uEiG
      4yIhM6KFWW00iKgymUiQ2WiUqt2kYXdcr7Khkw6ESGoBapZJ2/K4lGvywkJx577XaHE51+Aj
      Uxmimkp9n9hCAE6k3z+N+u87A6iYOi+sLGF5t92NsCJzPJnm+wtZss3+7ooPnM9VOZpIUtQH
      Z0jWm02qpkkyEGCj2eJWtQ6Cz0OZBOsNnbppdTIxgsChRIRPH5riaDLGar011Oq2jZAiYbvD
      i2WlA2GenJzjlZUcf311jX9X3sDcqkpLokAiJPP0oVE+PT/J4XgcSRT5wwsLQxnYW5sFnp4d
      ZyISQrcdvnV9hecXN2nu8tdlUeCB0QSnR0YpWt07ju/7PDk+xVKtyb89f72vn18xTL63sMpk
      NIS4QzXvxXwixvFU/LZ79x7jfWcAl0vFrskPHZ8x2zAHTv5t+MBzS+uMRgZ/Lc/3KekGL69l
      uVrqzgCpssDnpqc4PTpCWJEJKrevMx0LMx0L71tg2o1HxtL4d/B8DcflX75+je9cX+sxMtf1
      yTcsvnlhnVzN5jeffgjDtFlvDDcWy/W4XqoRVmT+t1cusFjt9dMdz+d8rsL1Up2Pz6dIhG9n
      yDOhMJbr8RfXFvcNcn1gs6lzZjxNUde7PisJAplwgFRY4oW1JZJagAfSo8QU9T01BOm3f/u3
      f/s9u3sfXCkXe5oxABYrLZrWwUGo6bqEtcHVRgHINXWWar2ToPMAW4yEAszEupmkgiAwEgrw
      1sZgYtw2IqrMf/LoCZqW3fc+/XCj0OClpf7yJruxWmtxrVDjxEict7PFoXekkZDGcwsbXC3V
      9v2c4/ms1wwenxwhHtA4FEtwJJ7maqnKS6vZA+/j02HAfv3h40xEQmTCQY6nEpweS9H0OgU8
      03WpWSb5dovZaPw97Sd43xXCUruoyNsQEXDvoFrR7xrbUERp36yPD7y8trlDeejof9psNFsk
      Ayq/dGIOZZ8HFlFlfuPxU4yGgzwylkYbovTvuj4Xs/vTMXbj3WyZP7u0uC//fy+ul+qcy5WH
      +qzpelzKtvjY+AzH4ulOhfcAushubDQ67uLpTJpnZif5yNQYtm/3BNt1y+yScnkv8L5xgRzP
      w3RdDseTZNtNmrvEo06m0nhOk0JrOO75E+MZFmpVFqrVrhUyqWlEFI1Se//qb9t2yLd1kgGN
      l1eznM+XaNvOzup2KhOnYTis1Vs7DzWkSDw6NsLfOzbDaDi4xZ8P8szsBD9Y7HVrtiELAqW2
      NZQvvxtvrBZ5YKKXt98PAlBoG0PvFgAXc2Xqpk080MnY3En/s+P5mHtSxoPSrQ3LxPZcFFHC
      9/2des/Pyi16zw3Acl3ezRe5WCjRtGxkUSQd1JiJJUgGVEaDYUaDISxb5ELh4BUsoijMxCLM
      xqLMxWIs1zsEtIlwmGPJBK+uH7yNAxTbBt9dWGWl3r1CNSybhmUzHg7y3zzyKJ7nIwkC6ZCG
      JnUrrwmCwCfmJhAE+NuVzZ46QlxT+cyhKf6XH54baky7YboenSDj4Gk9HgmxUT+41rEbbccl
      29R3DCCmDa8xqkgigS0at+44KIJIJhjmVq27HiILIi3X4FJ5k6lwnJZjs1Ar8kBynInwcMZ9
      r3hPDcByXb6zsMz1yq7t1XVp2jbZls4Xj8wxGgwhCAKnM2leWs3um+EBeGgkyQ+urfHaUo71
      WgvL8YgFFU5lkghHRSIDyHJ78U6u2DP5dyPb0nl5dZOvnTrSVy7E831W603O5Yvk2jqpkIrp
      uERVlYlwiMlomJPpBOW21cMrGhZjoRCaKvQNarcRUmR++cQcv/fm1Tu+/u5kxIl0gh+v7V/T
      2BlXOMjlUomr5Qq64yAJAmPhECOBMDVLx/Y8NEkmospUDRMfH9N1kURhS3pGJyirxFTtpy7F
      8jM3gN3Uo3P5Yvfk3wXTdXl+eY3xcJiIqqDJEn//gSP8m/PX+8p/+L6Pobv8P69cZbPWy1N5
      e7XIn767wKPTI4yMaGjKYEWDiKIMlWG5Vq5S0o2dPoBteL7Pa+tZXl7P9rYQ2hZjkTRPTHR6
      hNfrvWMdFr4P/9Hp4/zl9SXO58o99OjJSIivnDzE4WSMZEDtkW/cD6IAsggvb6xQswxCkkom
      EiDX3P8akiAgST5vZG/TRmxgud4gJMt8Zm6amNZpxnkrf9s1zLfbzETitC2Pq0aJG9UyRxMp
      Hkxlfqru0M80CPZ8n8VGmbPFdYpGm4vF/V2ammmxVLudk56KhvnPH3+AJyZGCSsysiigSiKZ
      UBCz5fLGjRwbfSb/NizX443lPC9dzlJv2/TjAWqSxEOj6R42Yz84nt9TlIOOYby0ttlX5cH2
      PF5c3eBGpZONiWkK4l0+33hAJR5Q+drJw3xiJE19rcLCxVVunl9FX61wVFSJCB3e7KPj6Tu6
      djqkcbWWZ6PVoGXbFIwWsymV+D6ukCgIHEvHsP3+O1rbcTiXL5HUAvh7Wu99YLle24kVXN/n
      RqW8r1z8TwI/0x2g5Vgs1Iq4W5mVpnUwFXkvEzKuqXxsOk085OJ4Pg8kxzi3WuHf3xquKATQ
      0G3OLpT41EMT7E6ljIdDfPbQDI0hxrWNvff0fJ83NnJ9m1W24W595lgyzngkRCLQYYneKY6n
      Y/zV61f5t8+/w61sd01jfaXIG+eWCGoKnz49z9//1CNEVWUoshrAoxMJ7D31GEmEL52Y4dxm
      lWvl6s4iIQCjoQCfPjRF2dK5Vh78XXLtNk3bJh0IEZRk9C1KdVCSabjdY/PwadoWqUBoqDHf
      DX5mBuBtRfiyKOG5Lgk1gCw2gf39370dRK7vca1awPQ6P9ylUp5/+cr1oVbs3ai0TERD5B8+
      eQzddUhoGslAx+fMtQQkUTjQoARgJNitCtG2HQr6watWod05AC+sKHzu6BT/34XFOxp/QBD4
      4+++yVvX1vb9nG7afPvN67x0aZnPPf0gVwTnwGOWPjI9ytOzY5wtbPa8lw4GePboDKFlmQv5
      CrbrMR4J8slDEzw4muR7i8v7Xtv1PCy38w9PY7OuE5AljoylWPHKXZwjSRCIqfsLft0rfiYG
      4Ps+16oFlrb6Xo/E0xyOplis6FwrD84vS4JARFF4cyNPyTBRRIGJSKirkePHC3mKreF92914
      /vo6/+GTxzmSiHe9ng4GmIlF9g0uoZNdyYSDNCwbeUvq0PN9vCF2om11NYBfffAQzy1sUGwP
      l+b1XZfSrRybB/jju1Fvm/zFc+/ypU+fJidDxehdpWVR4ONz4/zyiVkkkR5VPEWUuJCr8qOl
      bBejs1G2WajUOZFOMJMYXIOBzoL2Tq7IuXxx1y7p8K3GMumgSiai4PousihyIjlCXN1fduZe
      8TMxAMtzO6xOfPChahpIcZEPT46xXGvsqBbshu+DKIp8++YK+q70oQAkAgrHR0OMhoKsFA5u
      UBmEqm5yYaPM2IkQvu/j+j5FXadp2zw6liLbbHfdezdkQSAkS/xf716hbTuIgsBYOMiTExlC
      ikL9ADcqrCgEtna3ZFDjHz5yhH/248tDBcT6ehnrDib/NhzP4/svX+Z3/7MvUvRczufLlHWT
      gCxzOBFBljvS7H969TqSKBBSZGIBGR+PmBpgs2rz2tpa304yz4crxSrrjRZjMZVBtULH8zmb
      608qLOkWUVXjsYk0q80KLcfoUN+F217A7rjtJxEc/9QNwN/qiAorKtZWQBOSVVZqTaqGyclU
      iqvlcpcRSIKAKIrUjD7ZHqBi2FzL65w6Pk5pyOJY37EBt0p1fN+nZpm8uLZGrt0JagVgMq5R
      aTtUdGtnYgp05FIcz2N1T6Zopd5kpd4kqh6can1gJImyy7370okZ8OH/Pnt9YNEpIEscC2q8
      VB6OXtEPLcPiD777Jv/8n/winz/aUXDwfJ+/WVzmxq6MnOv6WK6F4yr86oljFFoGf3Xp0r5t
      lAB10yZsSKQjSk/xazISZrW2f3ZtqdYgEQREl7zepGy0t+QpVTzf50atRMlok9ACnEiMoA7o
      Dx8WP3UDqNsml8qbKKLEoWiStzZKvHRziapxe1IpkkgmrPHE5AgjwQARVeGvb67se92qafG3
      yxs9Fcc7RctycH2/a/JDxzhsz2U+GeYL87Pk2zo+kAkFeTdXZKE6WBKwYdkEZamH1LeNqUiY
      J/d0RHm+zyOTSX5DOc4LtzbZrOu0rU5LZSYc5NGJFF86McPvfuOlQf0xQ+ON62tcXy9xamYU
      gJV6o2vy70bTtnljM8t6zRhYzd2Lim7zlZPzFPQ2ZcNAkyTm4zGCssxCZeHAv29ZPsmQRECS
      uVUv0bBNJkMxfIQdUbOS0cbxPB4dmbinneCnbwCmTtO2EBB4danO5ULvD227Hut1Hd3O818+
      +SAbzdZQXUOrjSbS3eYQtxALKOTb7a7JvxtFvc1TU5OcGkkCUNZNlocguGVCQZJBjevl6g6v
      SBFFTqaTfHJ2itAujc+GZfPn126xvFV4i4dlEuEox5Jxnj0yS0RVEIBqy+DtG+v39H2h416+
      cO7WjgHsTjX3w1KtznJ5eJfLcFxM2+WTM1Ndr9+s7k/E24aAiCKJqLJMzdTxfL+jRrFnPSkZ
      bVzfR74HA/ip1QF832etVSWnNxkLRrhZMPtO/t0o6yb/6uzVvrn1vvcA0uG7zxKIAhwdidPa
      R1ffB1q7Uof5drtvn+1e1C2bLxye5cvH5hmPhAjIEkFFwnJdsq3btQrTcfnjyzd2Jv/u+16v
      1PjG1Vs4nocgCKwWajTuIl3aD5dWbjNP+9UrdsPeOg/hTtC0HcqGwdl8llc21rlaLnUZ/X5w
      fJu2Y1My2kyG4yS1IEfjo8S17oA4rKj3XCn+qe0Atu9xvVro6NH7Cpdyw/mtG802an64LyUK
      Ap84MsH1/HAry16MhIM8PJnC9Ae38nV8/tstfMNy1nzfZ6XW4HuLyzsS6rbncbNaY7FW50MT
      Yzw1PcFrGzly+7BT15st3tos8LHpcYr14RaGYVDc1dcwGgpC79l7O0gGNEKyTesOCHElo813
      F0tYu4wrFQiQDKh9M1DbUESRp6amWW2VaTsWLcfidHqyc2SUGsByXWqWQVhWeSg1ds8GcE87
      gO/7NCyby4UKb27kuVqs0rI6FVZZEElrIWRBZKNmDu0/ApR1ayiqbzKg8eWH5plJRO5q/F9+
      +BDJoMZoMMRYuL/I61QkSkRR0R0H2/UYCQWG+tFDiswPllb7nh/g+j6vb2a5Xq5yuXiwLMvF
      Yrkjr/ITZATs1oY+nkwS63P6PHQmyIcmxjmSHJ6cpkoiZbPVNfmhU9TMhLWd7Mj2UYsAACAA
      SURBVFfvmOBIKsJmq05CDRGWVSpmm7LZJq83O6oXyQwhWaPtOFyrFDuixveAu94BDMflr2+s
      8NZGoUubJqzIfHR6jC8cmUbbOlWxatyZCoDvQyYc3HdlFIAnJ0YZCQf4p888zH/3nTfuiFT2
      0ESKIxMR/vzmTTzfJ6woxFVtR4l5O3PVMFz+4N0rGI5LUJE5koiRDmoUDuDVRFSF5X0YmJ4P
      b27m9z3WaBtNy8Z2PTLxn5wScyYR3hpHZ0v7zNwMzy+vdqVvJUHg6elJ5uMxmBV4e7M41EI2
      Ew8NTIN6vsevnjzCD5fXu3SLYqrCVCyAh8Vqc/swwQBn0lNcruTQXZvJUJz15m2qfNO2aDs2
      T03M7vR43ynuygCals3vvX2ZtT7tgS3b4bnFdRYqNR6ZCuHg9pxzdRBEQeAXj87x59cWKRu9
      aU4BeGx8hDPjIwiCwFPz4/zWp8/wOz8819XnOginxhM8eSLJ1eptLlJR19EkiWempztNM02d
      Hy1vdgXjNdMi22yjSiL7bVFPjI8iirB8wNkRw1IuFFFEFAVmRuMkIgGqd1ED2IuHDo1xpVTm
      3VznRBhREBgNBjmSjKNJEkFZ5lA8hiB0dIAykQBfODrNt2+s7ltJno6F+fyRKd7MbfR1KX18
      xsIh/oMHjnG+WOBapURQlnl0NMPVSoH2rrWyZhoo4u0pWtlKqOxG0eh0mUXvsmB2x2bj+T7/
      /upi38m/G4vVJgtFk8PRNA+O3BkRazQUYCoa5h89fJzHx0eIqsoO8W0kqPG5w9M8e2R2p5VO
      EASePTXD//7LH+WRyTTSAF8hqin8g8eO8mtPzvf95qbrcq1cIaZqvLSSHZiJslwPCYG5WEc7
      ZxtxTeXz8zN8/vDMUJkJVRKZjBy8qk9HI8iCQDSo8eHj966+LAoCsUyYHyytkGu3d3j7K40G
      l4olJsJhHhxJs9qs8f3lWzy/usgPVm4xmwzw1ZOHCKu966YoCDw0muQ3HjvJ4UScoNy/FjIR
      7nyXpUaVW/USsgS27/B2YbNLahE6blrDNglKGgk1xFw01bPuiAj3FAfc8Q6w2WzzTnafiGkX
      Lufr/MqJozw5EeJvbm4MHQecHktSNFqEZJUvHp3jM47LrWqNy6Uihuuw1Kji+A6PZTpVV+iI
      3/qyyy89PsOZSpLNio5heNiuRzKk8eB4io8cGmMsGuSPr1wZeO9cu82PljcOJI3pjst8Isqv
      njxMzTRRRIlEQEUSBARBYCoa4Wxu//7hsXCIx8YyLNcaA8lz8pY6xeVSmYAs85WnH+T5c7dw
      7pD7tBunj01Q8q2+K7nhuLy4ts4nZia5WCrsfMZ0XS6XCzwzNcfDmSSvb+RYrjWRBIlMKMBD
      mRSHk9GdxefJ8XFe3VjveubpQJBHM536x3Kj1vXbdASBFWzvNlcppmm8U9jc+W08XyAdCFHc
      pVQXU1XqlkFQVu7KEO7YAK4UqgeSqbbh+j5XihWemhnn47PjvLB0MG0hFVRxJJ0fZ5uICDyc
      HkOTFN7OZ3d4KYbrcqVcpqjrPDs/T9U0eW555bZLocBkJsCJVIqPT091NV27ntcTnHWN2fOG
      bmS/Vanz9PQ4IaV3FT+ciDEZCQ/U59QkiTNjo6QCGp+bn+G5pbWeBUISIKpJvLx2W7MopMg8
      9cRhXnzj5l0VxJKRAF/8xClWrcEZpVJb52q51POcXd9no9XAcG1ssc1EUiQTDPF4ZrJnxT8c
      TxDXNJZqNWqWhek4xLUAS/UGM5FIX3HjTCjMoWiCktEmqQVYbda7Tscp6W0OxeMYnoUkSIwF
      I+T0OhfLm2iSfFes0Ts2gH5CrfuhstXx8+WTcxTaOhfyg7MeqYDGZ4+O0nQ7waOHz/VqEcsW
      +x7oVtB1LpdK3KxWe/xpH7haLjMWCnEqndqpFoqCQCoQGFj4UiUJ4QCG6jZ0x8WnfzigiCLP
      Hp7jrxeWyLa67yUgIPoSf3RhYacNNCBLpAMqgtCRec+EAmTbzZ7v3bYd5k+MUq63uXDlznhQ
      qizxP3/9s1gRkdX8YAPwYOCO1OnXNrv+f61S5FRqlIVqhZKhE1ZUjiWSpANBNEnmueVlCrrO
      2tZiEJRlDidiXfpBoiBQNUxeaazh4zMeiiD3SRatN6sIAkQUidFgiKrVueYw4gP9cMcGEOg3
      qv1uIIpcKhVYadQ5lFYRpRgrFaOLChGUJc6Mp/nisRnyRoMbtdvZE8f3KffR09/G9UqFSp9A
      eff7J1JJKobOerPZ6Q+OhMm3+zfOPJbJ8OZGad9c9TZimtJ38vu+T0Fvc71aYiwmEw9GkfzO
      T11sm1zMVdGd3gkYkCV+6fgcT8+Mcy5fYLkxoL4hCHzqqWMcisf49uvXhtqRJ5IR/sevf4Yn
      jk3xTm5/+RVJEDiZTHO+lOuiJ0cUpa8iRkFvUV43uwR+1xp1npme48cbGz30cN1xuFWt8+GJ
      caqmDkKnwJht3/77m7UKSS1AXNVoWJ25Mh6K0HINHM9FQOR8aRNREHgwNU5Yubsg+I4N4HAi
      Bgy/8jRdnfPF2w8yERb50NQMI1qEmml1GslFj9VmjVc3V1EkEc/vrKqSIHA8kabSzjOob+Cg
      KqbuOFwoFrlQKux8VhQEYpraKdnvoimcyWQ4PTpKzXBZru0v1yEAJ1KJjgKC22GDBuSOln7d
      Mnk9t9bFBTqUiBIWg/z+4tWBDFPDcfnm1UUCskRe3//+uuvyT7/yMT77yBH+3+fO8u7CZl+D
      ToQDfP6xo3zlo6fIxDv1ksOJOG9u5nqk1bcxGQkTUzXmogmW6zVEsVPEeiA1ymqj1tOl5Xg+
      JbPb1Ws7NheKeTZb/V1A3XFwPZ8PjU9RMXQWqr0sgapp8MjILIv1KuvNBtcrFRRRZDYWp2F3
      aBCu77PerDF5l030d3w+gOm6/B8/Pr9vjn4bE5Egh0bUnnNnA5LELx0+gSQIZNstXlxb6Tp/
      SxYEHs2MMRPtHBv6t2trXK/0uk4C8GB6hPP7nOIYUxVcvL5b+scmpoiqKlXTpKjrtCybgCyT
      CYV4fnFj31x/JhzkSCLGQqVG07a3lM+CfHhyDF90uFLppvyqosSVTeNAwwJIaCoPT8TJD3DT
      oGOwv37qOMlAAM/zWS/VeffWJuulOqbtUqm3ubGap97QyVcauK4HgkA0pPH48WkOHRnFS2l4
      e7awiKqQCgQo6HqHggEkAhofn5piOhrBdB1e3VzdMYKYqjEajHC13JsYiaoam0194A71xNgY
      j42Nsdlq8sLqUt9nOBWOstlq9LwX02Skrc1oIhTlZDJzVwf03bEynCyKjIeDvJPtDZJ2IyBL
      /PqDh8npvQGlIAgcS6SQRZGz+SzVPWfNenSOQTocTyIIAulgkM1ms0sxTqBTwXxyfJyNZqsv
      n0cA0sHgwOOEJFEkGQjw8lqnKLNtCCv1OpPREPgCTXtvag7SQa1zTGu1TttxcDy/c9q7YXG5
      WEF3bBS5W/uyZrhcyzeH4vsbrktCU3EZvLslNI3HxkaRttSe4+EAJ6ZHODyW5JVzC3zrlYts
      FuvUWgaO6+006uimza2NEmcvrbKxXGI6k2A6EyeuqZxMpQDYaLW6nq3huCzX68zGYsQ0jZFg
      iJJuojseKS1EOhAk2+79bkfjKYq60XeXFoAHR0ZIBgIIAizWqz2LlCQIO4oRexFRVKajMVq2
      RcU0WG5UcX2PkUDojozgrspnx1Jx/vGjJwZqxSQDGr/x2ClOpZPEtV6yWlILoEkSPgycnC3b
      pmXZvLmR5/u31mgaHo4jEJZVDsfjfHp2lqempjrFq5lpUoHu+0iCwCOZUaajg2kSumPz0tp6
      jyvgA7l2i6dnx/jKiUM8OJpkPh7ldCbFl08c2re31vN9bpVb1I3uJh5ccd8+4b2QBIn4ABlx
      UYBHx0Z7JAWXsxV+43e+wZ/96DzWEFXxXKHON775BvpSnV85fpSjyQTZAS6L4bo75w9/Z3GR
      xVqdqmFxpVzmpbU1ooq2kwIVgOlIjFOp9I5R7UUmFGIqEsHzPSzXYT4W75qMAnAqNTIwuJVF
      iXQg1HGlfB/Lc7lRLXVljYbBXVWCBUHggdEk/+1TZzibLXKlWKWk62iyyOnMCE9Nj6NtBcsf
      HZ/i5Y1VGraF7/sEJYUHkxkMx0WVJBJaoCez5Ps+TcvhX717pSfALbVN0lqI2WhsZwIkNI3T
      o6O8trFJ23GIqgpPT01xKB4j22pxsVTsu1uJiAMPk/OBlUaDLx6e57Hx0Z3XFyo11g6QTPGB
      lg6PZpI4vst4KMLVfBMY/jgmRRT5wvwMzy+vUdL1ndVVkyQeH8/wwK7MFkCh2uS/+N1vspIf
      XsIQwHE9/tk3XkKTJR49M7evkRZ1nZfX13oybo7vUzFMPjM3h+7YhGSFdDCIJIg8tpX3v1Yu
      d7R/tjSCMhEVw7V5N7dJZSvJMRuLoogKJaONLIiokkhCC1Ds02M9GY5i7Fm4PPyeYtpBuCdx
      XEUSmYgEsbEQJJegKuDgoEoS6UDnoLagrDARinJjs8HL1wq8tVDhr84v861Ly7y2lENCRJB9
      EG67DL4vcLPU7ksk8/zOYWsIMB+PYrouf72wyNu5PIbr4vo+uuOy3mgyHg4xHolgOE7PucIT
      4QhjoTBrzcE+uSpJnEylugos5/KlA3uFoZNG/Nz8HEcSqa2TIc2hC4gApzMpzoyPMBmJYDoe
      tuszFY3wydlpjicTXWPyPI//4V//De/cvPv20Leur/HIySlq/uAJFJRl6ltHzO6F7XkcTSQI
      K+oOXSEgyYiiyFgohON51KwO5SKqKhheRxJxd+bH8V0SWsedajs2uXYL3bEJK2rXxFYkAQQf
      x/fQHXtnPEFJRpVkblQrFPQ2QVnuUevbi3uiQ/u+z4VigVu126uO7ji8nc8S1zTGQmEublb4
      nR++y9VctcdHXCo3eGUxSyqs8ezpKU5PJ0kEApzbrGC5+wfZr6/neXg0xRvZHMv13gnZtG2+
      dXORf/TgKT40PkEmFOJ8oUjZMAnJCrOReBeNoR+iam91cdhjktytuGAb84kYEVUeSmNTFASm
      YmH+9PIt3twsdhi2dNyCV1cKfGJunE/OTRDY4te/cWWV58/eGGpcg2BaDn/ynbd55tmHMQd0
      sk1HIyz2OXhkG9cqJaqWjoePiMCJ5AjHE2l+sLzEauP2M1qq2yiiSEjqbqB3PI+b1XKXgZmu
      SyYY5omxCRqWxfVqAcO1qZg6FVMnFQgSVzpxRNkwOV+8neJdblR5ZmqOVGBwo/490aEd32Ot
      2f/k85VGnVcXs/zmX77KlT6TfzfKLZNvvLnMWs7kcCw51Jldpuvy5maehX26jLb9Vtf3Wao2
      Wam1qeg2640237m1zN+ubCAJYt+KqigIPas/QCIw3PE+miyhSRLrjSYXi0VKRntocaqpaIhv
      XV/hh8udQyy2h9eRDTT5i2vL/Ot3r3cEe32fP3ru7D23SQJcXsgStftzazKhII+NjZEJ9a+2
      SqJA2WrvHETo4XOzVuLtXLZr8m/D9jxuVWtE5Nu/ZzoQ7ru7NGyLTDDERDiM7btdK3rbtnl4
      ZIyZSILingPUTdflemX/XffeGmJ8+g7Y931uFur84au3qA7ZwWQ6Lr//ymVURRq6z3e51jiw
      CLTZbPHS6gbv5Is979UsC1EQiKhSVxrW90H1FZ6/tkmucQuAiViIM5NpZqIRApJ0YIfUSCjA
      95YWybdvG7MkCGQiKvnm4N9kLBzEcj02DuiKO58v81fXl/n83CTv3oPrsxuO69HMNfnsx45z
      Lt8JeGVRRJNFoprMKxurBGQJRRS7djdREHggnWat1b07OJ7HQm3wjqE7LqeSmU77oyghCiK5
      VrunlzquaviAJIg9p890KvcChuv0jV+aBzCR78kAOinRCDervcHd9y6s3bFej+V6/OFbN3j8
      +MhQn9dkCfOA3uGqafaoN+yG5/sktAAPjaYo6waXslX+9kaOtWqrp/tLFAQeGEtwYjyGsQ9d
      IihLWL5Nvt2d/nN9n3REIRMKsVRtdVG3NUnk0fERZuMd12cYvLqWI+0K1O5SF6kfLi/l+Mdf
      /DBHEgks1+VSqcilUgF9l6R8UJE5HIpjui4hReF4MklYUSgZzR2lN4CALB+YjeoImgmsbR0E
      mNJC5PTbeX9FFGnZDt9auIkkCghI+L6HIHSYoIoo8nZhnajSOQBwL89rZB/3B+7CAPytiP9a
      qUbDtBDFrVPEt/QgRUFA8hQW8ncn3ZGv6zR0m1Bg/6GJgsCjYyO8vL6x7y7gc3C1uKSbHIrF
      ubpR58/OLg/08z3f52K2ws1incfmUkRDck9/cCqgcWo0wfXqYN3TTFTlaw8cYanapKybaJLI
      4WSUiUiIf3fh5tBtl5br8eoQBMM7Qa7SeW6iIGC5LlcrpR73VXccVFni6alpGpbFzWqNmmni
      exL4LoLgE5IVHhkZ51q5sq9G0vlCkY1mc2f1FrdOsDycjCEJAtfKZdb2uFAjwSCPZkZZaVQp
      GO2tLFKDkVCIXKu1c62RQJDjyf3dzjsygIZl880ri7zT52ieqViQXzjcST3+1fnlOz7wYRue
      71OuGkQmovtO7CPJGI9kRigbBheL/f28iKIwH4/xjtHr/uyG43k8d2Odf/7q5aEkFg3H5e2l
      Ev/pR08yGtMo6WanRB+PcCqd5I3s/mcQVAyDiKrw+ET3Tuf5fpfLNAyqQ2p9DgtRuB0WFvT2
      wMUj12qxUK3x4tpaF7VDFgTOjI1yJpPpuE+Swq1abUAxTOiJDzzfJ9tqMx2JospC30xgSdfx
      faEn5x9VFI5OTpNrtzoLsuANbL/c+b77vrsLddPiX7x5ibMDzqVar+t869oqvi+wdA/CTQCm
      6fHhycxAfvdkJMQXj84hiyLPzExxMpXsIaWlAhq/fPQwEwN6fXfD83z+zVs37khf1HQ9/vzC
      Ek+MZ/i1U0f48olOvSCoyAMbcrYhCkJfEl3nvTvLSyTuQRWjHzLJ24XD/doMLa/TN7CX1+T4
      Pu/mO9k2YYt5+5nZOQKSjOf5O0JpncLX4N/pWrnMxoAUtU+nJrG3yGp5LpfKWbLtOrbnkFCD
      7Nu6x5A7gO/7fPPq4oFyJSXd5E8uL9C+A/WAfrBcl0/MTDKfiPHqWpbNZhvX94iqKo+MpfnQ
      ZGZHYkOVJD4/P8eZsVHO5nIUDZ1MMMjTU9NEVJWQohDXVGr7nF2bq5rkDjiBsh/Wam2ev7nB
      Vx461PX6TDTKu4XBZwqnAkHe3ixyPlemtOUCnRpN8vGZcWZiYW6Uh1e5eHxunB+ENBpD6ooe
      hJOztwW7xkIhgrLc99BC3xP6vg6dDM/1SoWRYICr5SpvbeYp6ja256JKIo+PjXIindg3g6e7
      bl/5+m2oksTx5DjnS1kalsV0JEbTvi2+0LJtHh9NHtgkM5QBFNoG7w5ZxLlWrOLco1pbVOvw
      4uuWhe66ePj4CNieR8O0MR23S2NGAIp6i5rdRpGgYrV5YW2RT00fIqKofHJ2iu/dWu4cK7QH
      c7Eoi+u5nteHxavLOb784FxXam46FuVwPM6tWu8DblsuLy4VaFndysvXy3V+uLjBh6czPVmW
      QYiqCk8fnuTJkzO8cPbmXX+HbSiyyCfPHGGxWudmpUbbdrBtEcv1UaQOA0AA5mJxPE8gvw9Z
      sGaavLCyztub+S5Gk+F4vLKeZb3Z6vxmgzrhRIFjyRTlzfUeRpQiilR1m7/MLlM1rA6D2DFI
      BG/vWKooUjV10oHwvqdQDmUA10r75/F3wwdE+d70tg6lovxgaa0n1mjZDmdzRRZrdX79gaOM
      hTs56YZtcbncveK2bJuLpTwfnZjhaCLOl48d4bWNLNlWG8/3Cckyp0ZSPJhO8c2395dh3A+b
      9Tam4yKKAudyJRZrdQzHJaJ2VCaatrUTlAm+wFJZZ5CnVbdsXljc6KhOHHAUlAB84cg0cU3l
      1z99hh++c3cdYrtx+tgUb1Ur3Fis9Tzv0bDGhyZHGQuFmAhHuFDYP64q6SabjcpAOt9SrUFE
      lRAF+sq9TEeiHEkkMFybC8XiTgwhCyKVtsv1QvfBg6v1JgFZ4vGJJMmQTMlocbawzngoyiMj
      kwN3gqFm6n7uQz8cH4sTuYND1XZDEgVSca1voL2NimHxrRvLO5KDdcvsmwMuGx0m4vl8me/e
      XOVCtsp6TcewfI4lkzw5MfxqOwj2Vs7+99+5zHdvrXC1VGWp1uBiocxipUUmEOFXjx/j66dO
      0TQYOPm34W5pLT00mhx4cowiijx7dIZn5jq6mB9+YJZfeOLEXX8HAE2ROfTIDNcrvZMfoNAy
      yTdNpiJRJFFkPhEnOEDpTRIEmpa9D5e1A9ejL+EvrqkEFJHvLC6wUq8zF4vx0YlJPj41A55C
      vmX2HaPhuLy1UabQNvHoLMZ5vYm1Dz9oKC7QWqPFtQMOWN6NxyY6IrcXN4c7l3Y3HplMM5IO
      Dmwa2UbDspmJRUgHA7iex0KttxYRllV+uJjnuwur5Fo6uuNiuR510+ZyscrVYpUTI3FevJWj
      ot+dDz0S1mj41sBFotA2CMgyqijz7RurQ13T8Xw+NTfJk5OjtOyOyycInfrCbDzCV08e4uOz
      411b+5MnZ3jx3AKVu4hlRFHgq88+hp/YP6DOtXROppOEVQVNkoiqCmuNZtfiI4tiJ0VZax28
      sPjwi0fniWsaogBxTeNkKoXjO2TbLQzXwXAdqqaBKooktRA/Wt7Y17Bc38dyPVKhjnEmtSAz
      0cTAHWAoA1BEkVfXhveTnz06w9Pz45zfKJNrDP9AMpEg/9VnHuFKpTIUdTgZ0JhPxAhIMm3H
      3mEVQmcVupRtslAZnJGqmRY3yjXCksJS5e4ObJ5KBdG0/TfSjUYLw/FYqg5/j0575Cwfmsow
      HglRbJlkGwbZhsE72TLvZstYrsd4JIQiCgQ1hU88cpi3r61RPECCvOs+qsxv/YNPMXV0vKd3
      eS98Os0xmVCAa5UKq83mVqpTYjwcYi4e42OTk8zEopzNFg40AEEQ+MjkOEcTcY6nUhxPJZFF
      gUulPlV706TYttgYwsB9H56ansDyHGYiCRJqcCAhbigXaDIa5lgqfvAHgdlYhEOJKLIk8l9/
      9lFOT/bng+/FVDzM//T3nmQ2FRladcL2POpmhwBluxBTA4yFwpxIphlR42w0Dq6QZls6iioc
      SIzrB1kUmEwcrETg+j5X7+CkdeiIj1mux59cXOR/ffkCr64WyLUMKoZFvtUxgt978yr//Q/P
      crPcwPd9Jkfi/MFvfY2v/8JjBIdwQY/PjPL7v/lrfO1Tj+4rELwbRV3nb5aWeGVjg8VajYLe
      pmaZqJLIh8bHGAuHCEgSycDBPboRtXNISNU0adk2Agwsmvl0BLqGge11OGptx+JyJUfRGLwg
      DLUDCILAXCLKu9nSvrlyVRI5MRrn5bUsr6xluVqpMJEME1Fl6rrdl+MTVCSenB/lP/7YCeZS
      EQKyzPlcaV/pkm1MRINcKuVZaTQoGfrWQxR4bGycHy5tHihfuA1JEpgKh1mtDr9yAjxz+P9n
      7T2jJLvPM7/fzZVz6Bwm54zBgCBAAKRIgJQoWRQpWdSK1mqX0rF0ZGst2yvvSj7es17Z56x2
      V15qJXnXq5wlRjCIBAEQRBxgZjCY2NMznburQ+Vcdeve6w+3u6drKvaAz7cBqrrSP7zheZ9n
      kFhA6xmugd22z9f6Lw+P+NzcXM/x5dsLXZuKmWqdS4kUpwfCBBwqmiLzgWMTfPzCYVyaQsMw
      yZdqWJaFZYFTlblweIxf/vHH+dXPPMlINADYSWmvGwDAxKRktG6WTK2GV1WJOJ2Ioq2cdzfT
      PWwOOVWmsine29jgRirFUqGAT9NYLbXelALgU119jeJqksRowLHNTog5PR2V4/qeB/CoCkdj
      IRZzRbJt4t2oy4HXIbNRqVJpGNsDy3XTxOVS+MjBET62f4Qhn5uxoIeTQ2GePjjEqX1BIkGF
      ZK3CnWyG1VIZWZTJ9lBlcMoSqtI6AFE1DLK1GjfWc23Lnu1gmBb/+MxBbq1nyPRJ3jsQ8fEv
      P3yalVK5rXzjgzg7GNtVHuVTVV6aXe2ZSIJNKlvI2RNs8uaIpM/l4PzhMT54fAKvQyGZLlAs
      lKmUq8yvpHj96gyvXr3HWrrAYMSPz+3gRg/bWlEQNi2TOm/IfYEAgiAQcToo1PWOnW2HLCKI
      Jg3L/msWNoV9rVzGq7a6y0z4/BwJR3hvvZWa8SD2BHycH4yRrVcY9QQY9wY7hkC7GojxqAqP
      DEXZF/LhkG2W4KFwgI/vG0NTpI4iUGCfEE9MDvKJw+M8tW+IxybjJBslUrVWyQxJhIYhdLxt
      trRB83q17ZdRaTRI5Gt90zEEQeDZvSM8vXeI6WSO9S5xpgCcGQ7zmz90lrjHhWlZXY3+wN6s
      nz60l+l0vi+5FY8ik682SPfx2C2kKjUOhP0M++yQzDRN/vD5N/n13/0qL1+eJpUrNanJ1RsG
      a+kCb99a4MsvX8UlikQGA+S7hEInYmFEsf2MLoBbVTkQDGJYFuulKg3Dtkwq1HUk0c7L/JrK
      qXiEYqPWtvxpWBYDbg/jPj+6aeCUFQ4EQ5yND+LX7PJwN7qIJok8OT7ATMHOQQKag5iz81js
      rifCREHAqYhk9Dxuh4XPKTLu8/PC3ErPxLWo65yIhhEEgWytxsXVRNsTzrAsHh2MU9GNltlb
      tyLz9MQwx6JBprOZthtAEUWqOn0Nn4CdcH583xhBl8Yz+4YY8rtJV2qU6g0srM3PLHMw6uef
      nj/E5y8cIujUEASb9ryUb38rgr1hnts7zpjfy0TAyzs9FJZlUeC5fWO8Mt/da/hBWNjh5Lmh
      CNlChf/pd77E37xwmWof34HeMLg8tUhmNcuRgyNUreb3t0U8fG7vOBuVMpkOY6QTPh9zmQr/
      /s2b/MnVe3x3JsGtjTyLuQr5isGRSIjPHN5LyKlxO9P5trGAJ4ZHqDQaJ+SLxAAAIABJREFU
      FPU6FUNHQCDkdDIZ8LJRrpBuU7Wzf8dxwi6FtU1ZGRMYdfvt71ygpRr0UHToRLlAqWH/4FWj
      wbXkRsdTYSeS5Sp1w0STJcqN9vztLbgUmZ89foC5XIGbGxkWNhsdJ+MRTkRDSKKAb1PS5EHE
      XC6imo+vTffX4DoSCW7PMDsVmU8cGuVg3MfFlXXWSxXcisyjQ3GOREMoUnPdQBIEfnj/BF+b
      nmuRVHTKEs+MjxBxaby4MG+7Tw75uLaao1Br/b68qsJPH9uLJIi79j0GWClUKFXr/Nr/8yUu
      3uzu19sOUzOryF+/zL/4pR8mUalS0nWbby+aOGVbwWPc52OlVGqZx3XKMi/PbPDK3HrL72pZ
      tgPk396Y59ZGjs+d2tP1fViWxYuLc02zwOubBtunojE+sW+MlxYWmc0WERDxKAoBh4LbAdlG
      HqXmIqg5qRkNJr0hLidXWC3b/gInI4NEdkgo7p4OjdXCsOtXls7afD6AW7ZJY53shryqimFa
      XFtPc3k1ub0gptN5vnV3gafGhzkbH+DV5aWmzedRFM7GB9AkmTeW10n2SIQdksSze0e3/90w
      TV6YX+RmMm2/UxEKRp0Xl5aoWQaPDMQQBAHLslgplnl9eZWlQpF6w0QSBVRR4kDIz7jfy76g
      n+lsmm/OzjTddPuiLjRBpVq3NrlAEoejAZ4cG8CnqVxJ9D87vBOmZfGFv33loRb/Fm7MJPji
      19/mN3/+OYq6zjdnZ5psmSRB4EjYZuEmKxUEQSDmdPH2Upbvza71jM+vr2f5g3emOTniBqH9
      owWBtoPwt1IbRF1O3llboSEYjAYUZFHiwuAIU5kNsvUq9ZpOtlblQCCMIFTI1irbU4tFs857
      yQRPDe/Zvgkeah5grZK3yUf1OpIoMuD0IYvJnjF3QFO3nd99msaYz9eWLxNxOgloDv7fK7fa
      KjAU9QbP353n/FCM5yb2MJPPUqjrlPUGdcNewE5Z5rGRKC/NJbrajv7M8f0Meu+fCG8n1tom
      g6Zl8erSCiGHxt6AnytrSb41s9CSaNcNW1z33GCMqqHz9upqy6IQBDAEnZ85cQivqlIzDFaL
      JdbKth5P1O1A7sOp/kEUMkW+9cLlXT2nHb748lV+/KlTrCn1FgUIw7K4m83w4/sPbHODriTS
      vDJ3p2+6zN10gbBbYSystpS8g5rGqNfLdJt5ioZlcWltBd00bI6nIGBYJlc3VtGt5hs1W6va
      w/cPFElqhu28+VAboKjXuJleJ1urcTAYIay5uZFZJVuvEHDKJEvda8ln4pHtFxYFgccGhzBM
      e35462uIOV08MTLCi3PLPeVHLq6ssy/o40x8gEur61xbTzddvwJwNGYTt66tZ7YHXWRRIOzU
      ODUQAkw2yhWiLieGaXY0cQb7Bru8toFTltsu/i2kqzW+Mj3LsVig46IwLIv5fA6vovHS4n2p
      EUkQ2BcIMOh19fTU3QkBWJxeRn+fRESw6eF/9M23OPPh9vSKSqNBqlJh2OulYZp88dZ8372b
      LUxtFPmJI8dYKOZIbuq0+lR1c8imxnSbuoIoCG3nCmpGA4+qUNhhnuFWVJySShW9yf9t0O1t
      oqv3vQEMy+SdtWXym8rAV5OrBDXH9h8+MxDk0kqOVAdKwZFIkJPx+wMglmVRNQzcioJHscOd
      PQE/Z+Jxag2DS4nuZKstfG9hhZBL442VRGvsCSSrFc4Pxvnpo/vZKFfI1epcTKySqlaZzmaZ
      3tSkPBwOcjoW7Tnrm6pU+d5iomeJda1UQUxadKP3z+cLLOQTTT+qYVlMZTIMB1SW861jmZ0Q
      c2pcn+8uersbvHV9joMfmEBS24e3W28rXalxJ9XDCqcNctU6+YrBR8bG+f7SEjO5HMlKlS/f
      vUvM5UQWxKY5bYADwRB1s0Gi1JxrRZ1uDoci3EivUzUaqKLEXC67PaDvlGXGvAF8isqwx99U
      Eu17A9QNYzvx3YJX1RBFgUK9Rt00ORLzci8tsFGqb1c63IrMRMDN8WiAXL1GYLMhsVAo8NLC
      YhOn/Oq6nUzHHO6+kmqwF9rl1dbEayemUhkeGYgTdTl4aWGRVBuJ91upTE9TDLBDoUSXcu9O
      lPUG7i40ieVCsePElVsTORoLcG2tdwfZKUs8Nxrn9R+gi2SuUKGSr+KJtA4UOWWZiNOetU2V
      a33/VjthAcuFMtn5IssPDL6slys4JIlxv49MtYJumgQdDiZ8tn1ToV7b1h4SEDBNgelMjgGn
      nxGvh6vJ1e3FD/aNFXW6iTlbP0vbDWBtNrGAbccTTZLwKhrZenXzhWHME7CdxAvL5Kr2h/A5
      BB4ZGibq8AAWN9JrbFTKvLO+si13tz8Q5tWl5ZaBCgu4nUqzrvU/5G1aVtsFvRPlRoNqw2Cx
      UGCtSw15qVBEEoSumynidLLQwx5qCwHVgUOxKLSprQc0jWKtAV1aXT92eJSQw8GrC51LomGn
      xi+cO0i5j42yW4zIbhqK0mTkJwDHwhEM08K0urXEemO5WMTd4SatGgZRpxufqjKdTbNRKfPd
      xTlGPF6eHB4nX69xK5ViLlcgU7lPhBx0u3GprQ2Giq6TMPN4FA2Pom7fAi0bYLVU4mJijfVN
      M+eoy8m5gTgjXg/nYsNMZZMU6jVGvX58qoN31ppDDxOLuXyGw8Ew93K2QtcWLOBmOkndsLpy
      PjJd/AAehCyKBDStq+GcItrO44v53mS0AbeLlWKp7Q+riiIfHBnkK9NzfZnxRV1OPjAS56XF
      haZNGne5eGp0lC9Pd1d/8GkKv3z+MI+NRvmHu8vc3shSb5iIokDc4+SR4Qgf3z9KxKXx8mr/
      sov9wiGKPLNvH1PpDKlKmWSlSllvcHF1jXfW1ok6nYx5/aiSSKODmFY3SGL37XMjlcSwGtu/
      xZbelEdRGfb4mGtjLZUolQiZGqJ4P0xzSPKmoFYDRRQ5FxshsnkbbG8Ay7K4m83xrZn5pkZN
      oa4znyvwkYlRjoRDqKJMrp4nm1pnvVxqK25bNwx002Sj0v6kXC52nxn2qkpXAdqd2Bf0cygc
      ZKnQKqG9hVGfF4ck9ZWo7Q34ORQK8sqS7Wm2NZbnVhWenRhnyONmf9Dfk5MiAAfDAQplnUZe
      YGalQK5WZzLk4/ReL25ZZcjjZirdfuPKm5KCyUKZ27PrrMyuk0kVqOgNNEUiGPahhPwIm7+V
      1/WDnQ0G8LkdOGWFk9Eot9Np7mbzTd/hUrHIRqXCgNfBTHp3PCqPKnM4GmA233njlnUdVW49
      zVdKRaqN9pL3ABXd4KmxEVLVMpokIQJTWTun1E2T5WKudQOUGw2+M7fQtktpWBYvzS+hSPf/
      EMBSsdB2Csmt2OXOTk6BUaeL1WKl44INOR380GSQL07NdniEDUUU+aHJYeJuJ7PZHHfbzJgG
      NI3HhgbserXbxe1095NywO1i1OdlfyjAW0trvDKbYDlbxiHKzC3fYjzo4chAcNOcrfOtIxsC
      v/3Ny7y71JzMX5lJ8sV3Zhjwufjxs3tRFBHdav3ODwWDfOntaf70tRvkH+AnVWo67xarvDu/
      zp++doOfe/I4j08OosjSD6QKBKDIEpNDtqRIzTB4Z3Wt7QFSMwz2R13MZfpP2AE+ND7A+cEY
      C4VWWfQtBB1aS965hQcbcTvRME0CqgPvpsF53Ww0CWp51fuHxfYGmMnmuupe1k2TK+vrKDuC
      JkGwnf/y9XpTPO+QJeYLWSZ8Aeby2aZN5Vc1TsfirJbKbTkdoiAQdzsJORycjIe4uta+Za6I
      Ip86NMmw140gCHx0YpzQ2hq3UxkqjcZ22ONTZV5ZXMKnqYx6fbgVua3UBtiLf9jrodow+Pur
      s/ztezOkHhg2//6sXUadCHsZjbqQleYkVwAS60Wuz3Tvi6zmy/zeS9c4OhriieND2yU8VZI4
      HAzyDxdn+e6NuZ6LKlWs8u+++Q73zuxjfDDE3cXOZdzdYHwgRDxku65kqrWudOmgU+HR4Shv
      LPX32kNeFz99fA9Bh4Oz8XhbGZkj4TBjPg+vryy1HJTDHi+KIHG3jasM2CyCq8k1FjadKGVB
      IOJ0oskiEYebMW9g+7HbXKA76QwrPaobflVFlJrfzoFghBOROAHNQbmhUzMalBs6iVKRdLXC
      hYER2+SgYVKoGTQMkZlsHk2SqRtGszOMKODRJJKVEguFPJJkMuhxoYoy1YatCSkKdky3x++z
      NYSqNZyyjEdVGPN6ORYNcyQSomo0WC2VKOo6+XqdjUqFmWyWEa+X6maIthNRp5Mf2TdJw7D4
      N9+9wt9fm6XcQdXMtCBdrpHMVzk/HGNv2EdA09gb8FEp6Lzw3kLfp+F6voLLkvn8hWMciYQ4
      PxDnS29O87Ur93Y1h31nNY3HqZHZ+MEkw5/7xKOcOzwG2IbeU11uTlWS+Oyx/awWKyz1qESN
      +d38+gdPMOJ3IwADbjcRp5Nao2H/JpZNXz4YDBFzuZFEgUytirXZvNJkCQSTqqFvm5PshLjJ
      RF3dYTFlYs+IR10OJn2hpshk+zzf8tvthmGPl7hH424uTdWwhVlvZzZYqxQ56I9Q0GtNMiy5
      eo10rcKA08/V1exmTH//JHFIEgfCAXsGVJbI1Cqs7KjxmpYFQoMf3m8nLd9fWOXluQRLhTKL
      uftftFuReXQ4xo8eHMerKSwWCtxOt94cFrBYyPPRiQmy1RqLm3nDvkCAQ+EgkiDyb793lZfu
      9ae2Vqw1eP7aAr/9Ixc4GAswny7w756/vOvKyCt3V3hqZoSPH5vgjbvLfOXS7pWeTQvWDROn
      z0XlfZZDB8M+Pv3h09v/DmgaTlnu6CkWdjqIuhz88w+e4JvTS3x1apFEsdx0CAQcKk9NDPDp
      IxNE3I7tZSIIAmNeH4lClcvL2U2liTwvzCTwqgqPjcR4amQC3TRYKuZYKuW3iyQuVcCtOMjX
      9G2hg5OxGGvlApkHIicLqBsWNbOBd8d/394AE34fry51ZnSKwGTAz6DbxZg3wEvLM5QbOnXT
      YK1cJFertn3uSrHInWShbUJbNQzuZXL81OED+DSVf5i/1/a1F4p53lvN8fx0++GQkt7gxbkV
      FvJF/vtzh7mV6s40XMjnGQ94WK0amJZJ0SgDQd5dSfL1W7tTiEhXavznt27zWx8/z5+/dZti
      7eGU2t6cXeVjR8b4izduPRQRDuxZ4uG9Q8xfm33oXEAUBf7Fz30MSZFZ2BzhjLgcnIhFeWul
      1YhPEUVGvV7eWVujYZqcGPTzzOQgC7kSi/kSd7IpEAyGfE7OxmNEXFqTVJVhmvzVjXu8sdza
      xCvUdb49s8xUKscvnDlMrv6AkQqwP+BnwhdEN01cm34A2Xr7AoUoCBgP3PzbGyDk0Dg3GOet
      lfayfidiUQbdtv9S3TRakpCGZSKLYktjZ71U7VrNKekN3ttI8sGRITrppU1t5Li4lMXoEVfc
      Tef5i+v38HbXQyVRKlJolLabJWvlIrfSG/z1uw8n6XhxcZ0ry0lenFra9XO38Nq9FabWMry3
      +P66uUUT/oeffob/+FcvUdulQJkoCnzwQyf44nKSf3V5evu7kEWBw7EARwZ9uJ0CNcMe0g9o
      dlPzzUSzxlHM5eLZiQkaYpWSIGMvM5PLGwkkQWTCdz8Gf2k+0Xbx78R8rshfXL/LnmirgkRJ
      17mYWN0ezo+7XIz7PS39HLeicCI80KJksZ0DCILAiNeDU5ZZL5W3Y2RREJjw+zg7EMOlKJtx
      uMB8IdsUv4c0J0dCMVZLxe2FNeb1k68YPWVVREHgRDRMpdFg/QGNd1uQttgxHn8Qa8UKQZfS
      VRHPqYgtJsylWoNv3lyh0ufrNL9HKFV17ryPWrxumLhkiStzDy/StfV3fv4jZ3jy2CQXb85T
      6fNG0hwq/sNjbDg1VouVpvDFtGC9WOXmag7BlPjp4/s5HY/hkGWm2rh3lnSdbK1GqlZqqRzp
      psGELwjYHdo/vDrV142XrFTZH/aj73CwsSyYy5ZYLZWpbeZ1mVqNxXyRA8EQDtmWTo+6XDw2
      OIJX1Vomw5pKGKIgcCoW4Z+cPMoP753AJStUdIPbqSx/+N4t/uDKdW4m00iCwNnoEC7ZdlAx
      DIGNgsG37yVYzDRYz5uMuEKciQ62nfp5EFu19oPBMCMeH8LmXaCKImHVQ77a/0lmWBaFavdF
      fDIaR3qQpGOKlB4yfAG4ubp7CZiWv7HycDTonTAti1SpwtPnDvC3/+bn+ezHzhHwdL4S/R4H
      P/bMKfY8eRwr5Ouav1jA5eUU//fL11AFqa117Rbm83n0NhSJnfvhXjrf99CSaUG5BmeiQwy6
      PIx5/FTqtOVk2SIEGfb4/URdCgNuBxZmW6nFlk6wIAgs5gp8a2ahqVxoAdlana9O26YPT44O
      8cTgBN+ZXeLaaopKo5kQtZRf4MZGjoirt6OKR1V5cX6ZRLFEvlbHwsKtyhyORSnXjV1NRgEI
      lsQjAzHeXW+W5tANC8EUmU2XWC8bdkfb7+J4LIJRl95XW7+b/F6/eFgxsZ0QAEWSKNR0buUL
      jJ/dy6f2xbl+d4WVRJqYy8mJeAifQ2XfaJQT+4b5vUt3WJte7vs1bq1n+e1XrzEx0F35YcDl
      bdL6FxCIu2xzO4csk+yhfvcg0pUaE74AE74A+VqdN5c7l13LjQazuRyKbFLUdW5l1pn0hoi7
      vE2Pa9kApmW1LP6dsIA3l1fZG/BxK5nj9aX1tgvHtGA6nWOtpBB1dW4aqaLIdDrbspNzNZ21
      4iJBrUdA3wayKPLIwAAHQyFmsjkK9TpXEilm0nazZjp1v0Q2m66QL8MP7RnBqcjUjd2p4G3h
      zFiURDL/0JtIAJ4+NMprU4vvS+JQlkQqmPxfr71LYudsc9DNQNAuPRb9Hj596gAjPjfX1zJ8
      exeLfwsv3kvwCdcAPld7PqUqijw6MEyqWuZeLsNMLkelbvJycZlXhRUmA35UYXcb3r2jUqn3
      Qb0YcPkIOhQuJ+3Pl6lVeHxgAt+ORljLsZUsVzpah27BAi6vJnl9ufcEUL6mE3G6GPN5m8Jy
      AYi7XYiC2JFabFgWq6VSR4nATpgMeGzzaE3jVCxKvmoynSq2rc2bFlxeTfE3N2eYDHlbH9AH
      JEHg2UNjHIgHej+403uO+Hh8/zBxX285927wujW+em+pefHvgAXM5Yp84e2brJUqvPo+co5C
      yUTuEOOeisVQJYmo002iUCVfNdA3CXR102QqnWEqk9qVHtP+kI+NcpmVYmFbkKsTbKMNF5Ud
      Ei6mZbVQd1o2QKeT/0HMZPOU+3zsernKj+6f5CcO7uOJkSGeGBniUwf38oGhgZ6kMkm0O8v9
      QpFEzuwwnljIF3lhpnd1ZjZbIOZ37nqzARwfDHF8MMRPnNm3+ydv4sl9wwRdGh99QGp9t3D5
      nT1nGsCWbPzi7TnupXfP5d9CqWbwQxMTeHaczLIgcC4e5+SmP/DNVJq1cvu+RN007IJFH/Br
      CoulLN+cm+E783N8Y/Ye/i4h47jPS7ZepqjXUUR7/XgVjYZpNN0eLRvA18GdvBX9r5RiXbfL
      XwEfF4YHuDA8wGTAT7ZW73mDCILAZNDT9yZ4YnSAMb8tg2FZFq8trPVd2qwLBh/aM9TXY7fg
      URU+f+EwmiTy7JFxzo3Hej/pAXgdCs8dsyXWf/LCIcbCvl3/DYCQz4kv1P8N8t5amtWH0BLd
      QrVhMOb18vToGJqgUqyZ1Bsiy/kKK4US1ubUWzfsCXoY9nZ/z5okMhl2kq1VtynYNcOgaugM
      eVwoO/IvURA4GAwScSvcyqwzX8iiSTIfHJhkzOPnVnaN1fL9Td+yAUIObVt2vBNEQeBwJNj1
      MTvhkKW21aBeTipbGAu4+amje3pugrODEf6bwxNN0hd3M/2fcPmazs8+sp+zI/2Z9DkVif/x
      iWMcjPpJFCqkyjV+/dlzjO8ilNJkid947jxRj5NsuYZbU/hfP/Eo3j7tWLcQ9Tr50KlJW5Wt
      T9QNsy0Rr18EHRoXE+v88bU7LBXKVHSTVKXGextp/uT6FK8urfYscSqSwC+dO8LZwUjbI3Uy
      4OUzRydbytZgh3NuVeZH9k0wGXCxP+Tl0wf38/T4CEX9foJd0us0LBPdBLekEVDvr2/BalMb
      WswX+Otbdzvq15wfjHE0EuYLl270VcN9YnSAx4Zj3EpmyVRrqJLERMCDW1H48xt3etKUnxkf
      5tGhOHfSOb4ytcBMJr/9uqJgq1JE3Q6ORAMEHBr7Q37GfDZJ7l++9Db5XZQ3/5cPnCSgqfyX
      i7f5xq3FtmGegO1hcHwgxHKuxO31+0m8Q5YY8buYX8tR7KE4HXJpXJgcIFOuMpcqUNUbOFWZ
      0aAXv6pw8e4ymT4cICcifn7zxz7AWxspXlvcXUwvWwJTaw8XBn3kwBCCYna8xQUg7tGomZ1D
      5cOhEB8eH8OyLG6l03x/cZlaw2SvP8ihSJAJv4eZXI7XVtqHsV5VJeJStlmj+/1h9vkjXE0l
      WCzat48myTQMO/4XgLDDxYWBURyy3H4DgO3B++3ZhaZSlUOSGA248DpsWZA7yQpLuR6yI7LE
      /qCP6XSupZwZczlRZYFMF2lBj6rwowfGccgSPlVDESU2SlWWCyXSlRpvLK21lSbcE/DyE0f2
      8OfX7rKQ60+VWQD+z2cewafZagUzqTwv30twYzVDbtOJZNjvZl/Exwt3lrm13p145ldkJv1u
      ljIF0qUapmXh0RTGw158DpV761lWu/B2Ag6VkEMhW6ySLlWaqkOiIBDzuXjuxCSfefQQIbeD
      v7h+j+/O7s418pmJIf7s0t1dNwCdssRTh+I9bxCnLOF1tPdgkEWRnziwn4jTSbZW4dXE/eH6
      EbeP09EhBEFgo1LmGzPtyYFDHg8I+nZTNu704FddrJVLFPUqwx4fqWq5aTAL4GgoxuFQtPNM
      8Ljfy3934jBrpTLZag2HLBN2ary+OkfNsN/KkE+mpmtsdPCnUkURtyx3VEZeL1dQRJGAQ2lL
      tHLIIhGPzGuJJSzLwinLnIkNMO7141EVvvDO9Y66nDPZAr/79g32BHx9b4BRvwevaidWoiCw
      L+Jnb9iHadmcFUEQyFRq/PKXXutLSDenN6iKAv/lH30YaZOPrskSL04t8TvffZdKL4/jap1K
      w+Cz5w9ybDDEfDJHud7AoynsiQbYPxAk4Lrf3dwb9PHi7ErfpVhREDg3FKFeN/njy7sj4D17
      cIQKvUvGlYbBc8OjvJVINP3GmiTxzNgoYYcDy7JIlJtNz9cqRWqGQa5Wo6jrhBzOFnVoVZI4
      GY2Rq5WZLaSRRYlEqcSdzP31VmtkaRcVFjbFHbpKI0qCgCaLJCpZUrUihmU2vQlJFHhidAgR
      gdwmI89uxIhM+D2cHYwy1UMW3LQsBtxuzgxEqBkmAvapvz8YIOiWqZr3R+J00yRRKjLs8fHl
      qXmme1QwdNPcHtjulQgLwGeO7kGVRBLFEkW9gSqJyKKIKApIoohhmfz6Ny4ytdG/yG2yVCWR
      r/AjR8fxaCrvLm7wr79xkWqfJ65hWtxMpHn60Cg/fHIvZybiHBuJMhzy4lTlpta+T1N4J5Hs
      uzo3HvDwif1jnBwMM5susNCnDMuF0Ri/8OghLq11dvHZiafGhjg3OEDY4cSvaegNqNXh2lqW
      y6tJkuUqsggFvbr9eQQEptM5rmysM5fPbcqnC7gUGUUUcUoSbkVmo1LCsuBQMIZPdbQ4029P
      9T2QYIx7A4Qczt6qEDP5FKtlm6Jc0mtNroGKKLJazuNxNnh01MeoJ4Qmyvg0lZBT4/np+b6+
      oLlcgf/26D4uDMUp6TqSKCIJAl+bbT2VdNPkRirFu2v90QZytTofHB3gjaW1rvnKiYEQV9eT
      fO3u3PZJ5FZkHhmM8fjoIJIg8L17CS4v756u8L2ZBJeWkhyJB/jCy+/1vfi3UGsY/O7LVzk7
      FsO9o/RnbYrQzmYLVBoGIYfKRyaH+Nubsz2755ok8mMHJ9AkW036N545zRfevMnXby92zMlE
      AZ49MMKvfOAoiiSiSWJPaXhJEPBq6qaogspXpxaYyTSPr17fyOCQJfaGnewJO3FIMuulGiW9
      +XY3LAu/5uBYOMybq8vbPsHJSoVEqWSHQ23gVx04ZImNahkRgbDTyUolQ8zl7r0BHvwyzsdH
      WS/ft8WZ3hyRNGiA0GBf6L4zdz9a7luvsVIskqmXSJQKCIJA3OnuaJN5L53blRCTJAr8yvlj
      /P2tWeZzxabnhpwaZwYj3ElnWurnJb3BywsrpKs1Prl/gq9cf3jJwa/cmCdXqnC3R97QCXOp
      Aq9ML/PcsQksy2I2W+Qvr9/jdrI5t3LIEi5Zomo0Og7lOGWJnzq2l+Ox+7LhDkXin33wGM/s
      HeQPL91hOpmnYZhIoohLkTk1GOJTxyY4Er9vPXo4HOTyWnf9pkPhAKoosl6q8J8u3eooVVlt
      GNxcKzLs9nNsKMRstv13nSgWsSyzRYql3NDZ6NBv8KoO9IZAplTCNE1E0yTi0XDJSu8NsMcX
      plCvkddr+BUXuVqdmNOLT1VZKTWHIA8aK/fyaN2JmVyGQuP+hlks5u3nP7DQZUFElXZXIizW
      dSYCXn71wnFWCmWW8kUapkXM7WTM7+bPb0x3bR69t55izOvh5trDsz2vJdKYffQ9uuGV6WWe
      PTrOO4kkv/fO7bYjrNWGQbVh4JAlxv1ukuXq9o0tiyJBp8LZoTAjficN00TZ7KY2TJM3V1Z5
      bz3JngEnE3EHlgnHomGeGR9BbVOHfHJskNlcoWMRw6sqPD0+jGlZfHlqvqdOqwW8NLeCpnRe
      N4ZltTjEb0GVJMYdfuYL90NUAYHLiVTTTZWv57iXFXCKzt7y6Ioo4VEc3MsUWCoWmclluZvN
      UDMM9vgDNEyTmtHArWg4JQcrxTLFuo5zk+y02IeGjiwKjAY06g/wO0IOB6okNYVcp2NxVFHh
      +kb/i/FAyM/hqH3a+TSVEZ+HMb+HsMvBRrnC9xZ6V06W8mVuLPdd4fmFAAAgAElEQVRvF/sg
      TNOiVKqS34Xm/4OQRIFTE3H+/Zs3us5vg53zxN1O/tljxzg3FMXtEHFqAgGXTNnQuZfNslou
      M+LxoIgi351f5N315H1LV0FAFAWSlQomlk1leeBA0ySJ/SE/6+VKizz8iNfNpw/tIex0sFaq
      8KXbvcMysKkpDdPE2UbbB+yQKux0tGh+Agy5PZwfHCKoOfEoCmNeP/PZMrk2ZXALm7Ha8wZo
      mCavLi83Jb92HJ7ELSscDw+AmeL15QT5+n1KsFdVOBAM9BSaAjgdj+BT5W21ry0ENScKKkuZ
      VXK1OoNuN0ZDZE/A2zTl3wsHI539zZLl9iYbD6JYf3+nt2VZu479H0RZb/BX12f6smQCuJnM
      Mpct4nGIpKplZOn+orKwhaleWVrmWCTCzS7uMFfW1jkSDhFxtRITgw6Nzx7dz42NDBdX1snX
      64x4PVwYim37hM1lC3279QDkqzp7Qj6ybU76Ea+Xk9EorywvNIVBTlnmYCiMJIiMen2Men2s
      FEtdbx3T6kMaMVWpkGojVQ1wL5dFEkRemFtskTkv1HXeXU8y6nd3dUeMuRx8ZHKEutkgU61Q
      2dzZdd3i61MrrO9oBC1ky7y1vMGYz0Pc7SRR7D37Oux1Iwkif3l9hsWcnbsMelycGQxzLBZs
      Cds6IeDUUCWx58nbCW5NwQ8ki7ujAO+EYVrc2YXNEsCri2uMhdSOm3exUMAwuyu8mZZ9Wrbb
      AGW9wT/cW+Liyvr2xpzPlri4vMGhiJ9PHhjvm1+2BcOyuDA0zKW1BBuba0/Ankk/Fx9gvpBB
      FgV0025yOWQJlyJSM3TgPtMzU+l9uPXcAFXDoFOvr6TrfH8p0VHj37AsLCye2zvKq4urTaOR
      kiBwMBzgkwfG8agKliXz1Mgka5Ui68UKf3dzoeNiW8jbEob9SIgnClV+8+XLDySEKZ6fXuRA
      2MdPHp3s6+9MBrycGAxx8SFlR86NRtHLNe7uooT6IByaTH2zH9Ev5rIFAu7O1AzDssj0kJYE
      2t46Fb3Bn7w33bbPo5sm19YzrBTKnB2M9v1+wT7NA5rGkXCE2VwWQRA4FAox6Pbwxuoiq2X7
      QJVEAQQTVZaomTrTuY0mvr/WB3+s5wbwa2pHN3UBgXyPccd8vc5EwMueoJfXl1fIVGsMuj2c
      G4gTdzuxsLkaqiThUhTGJD9fvrXU86Q1LIugqjHgcXIr2Rqb+zWV2UyJSqPzj3snlec/vHmT
      EwN+CmYXkStR5PxQDJ+oPfQG+LFjEyyl8rxwuz+z7HY4MRrlZnF3fsaWZedxnZJ8AYi6XB1V
      vbfwoO2pZVl8byHR0/41ValxbT2NQ+r8Hh7EoNfJy0vz26c/QFGvcyYWZ618//MLgr0OGqaF
      Jkk4JI0raxuUdB2fphJ1OtEkqat4b+8NoGrsDwS5mW6ufyuiyKTP3yRP0g6WZbFYyJOo5GkI
      Bl6nSNmskK6X8GkKF9eWyNWryKLIsXAcsyEy0yeBLVmp8tnj+/jE/nFup7Lkq3WciszeoI+/
      uTHbV6xcqOvc2shzeijIRhuhLkkQeG7PKANuF5FJJxfGY7y5Sxnyjx4Y4eRgiMmgh5GAh6Vd
      GGZvIe518qlTe7n92tVdKbCFXRoHQgEurbV/zxGnk0cHB5jN5jsuFJcisyfQnEdVGgZv9hhm
      38JGqcKg18VstrskJtj9CbdDaFr8ANlajbfXElhtLr+ow4NgyVxcWWv6DC5FJuJysNzBZyLu
      dvXeAIIgcDY+gEtRmMllN1/AJOBQsQSjq80R2KXQtXKxqcJjYjGVSZGulslsukTWDYOrGwks
      fXcal3fTeZ7dN8rIjkGS6+sZ3u2gKNcO6UqdIbeHk7Ew1zZSFOo2aapSM5BNiW/dWOL5a4tE
      3Q4+sm+YhUyRlT61d04MhvifnzphD+g4NX7xQ8f5P55/C30XSaEsivzCk8fZH/Ez4nP33bEF
      OBUPcyoWI1mpMJ9vXoBeVeHJkWFCTgcfHh/l23OtqhiaJPGxyfEWNYW1UqXn7b+FhmVxKOy3
      zVC6CBTLosDH9o6Q0ds/pqw38DsU6jvIdQLQMODtRKs/RFlvoBsmRyJB5rKFbSqGJAjsDfr5
      8PhIf/4A9ukc4XAozEopz7vJBFVDp9Koo8kCDb3zBoi5nTYX44Hfu24YZB9QgTYsi2Rld6JO
      7RKsN5d2Ly3yzkqKf/XUaS4Mx7m5luE/fv861xOZthUsr6b0lTd89MAIv/bUiaZZ32cOjjCf
      yvNfX7/ZU+YF7APkZx49yMeOjCOLIh/fN8rvX7rd12fyqQpPTQygiCJnYwN4FI1CvYaFRczl
      4lAohE+1eyoHw0H8DpXLqxuslWx1bEWQiTpczKZKJIt1xvxuIm4HoiBQ1hu7Gt2URZFfPHuI
      v7k5w3vrmZYKnl9T+dED4xyPB/nyvfa8JAs4HR3gTjZJrmazEg6HolxeTXWsNOqmrSJ3fiRA
      1GGX7UMOB37Nlkjv2yBDEARkQSC9w9dXEAQGfRprhUZb7R+PovCR8VHu5dOUi83/3ykrxF1u
      lor3k0JVlBjxOnlvtf9uabupoNmHCDFWi2WqDYM35tb419+50pVPU9isK48FPYwFPUxtZCnV
      GwgIiCJEfRrnJ6I8PjGAsalGsJW4SqLIz33gCFGviz945RqpLnRnj0Ph3L44il/hD969iV9T
      ORQOcGEkyps9dDhlUeDHD0/w1akF3lpeJ1/TsbAZvcfjIY4eiOJT1aaEesDt5tk9Lq6tZviz
      d+9ybS3TlIs5ZYlTg2H+0em9eDZ5SJ269Q/Cpcgkq2X2hF1oqkW6rOOWVbyayp6Al6PRIF5V
      wQJCmqNFHgfsabNryQ0K9TqiIBDWPIQ1F5lq9z5OvqZjohF0KE3CuPAQPsG2ds/9BebTVMb8
      bmqGScOwy2mqJKFJIkGnxkaljN4wm0zMZFHkZCTOgUCYQr1OtlrHtOBoOM6wx8PrfXLaBeC5
      fWMU9CqpahVFFFEliW/fW+7LkHonVElk2O3iN775Tt+lzly1zjP7hvitj5/nk0fHOTzsIxSU
      GQm7ECXbcON2Ko1bVYk+UEKM+11MxgPULZNawwDLPu1dqsxY0Mtj+4cYGfaiuWSKuk6l0SBT
      rTGdyRFwqEwEvCx1sFAKOTU+OBbnhZllbiWbBQcalsVKocyrC2tossze4P0Gl26Y/PV7s/z2
      a9dZyJVabriGabGUL/HSTAK/Q6VqNvrKsxRRxO+SmM6myW3eQA5FIObR+PjecfYG/WiyZJvu
      CQJeVbXLszs2lygIINjrz9w0cElVK1QbBumK7VDUCW5Vwe8QcSsqXqV5A3ScB+gEwzKZyiRJ
      lAq4FYWaqVMxdFRR5lRomKph8r3FJVZLzTtYEmBP0Mf+YIC4y41P1ZjL5XltObFdhpNFkQmf
      jzvJPPcyvROmYZ+TPRFnU6v/XGyAr91e6SqZ0Q4hh0YmXe6L5rwTiijyhU89TtSn8aU7d9v6
      vYiCwGcOHiDidJCp1viHmSVuJ7PUDcOuXlkQczp4ZnyIIZ8bt6bwX9+73XVO4kDIzweGB3lz
      aZ3pdJ5qwyDk1DgRCzHgdfI7b93oyQoVgM+fOcQT4wNYlsVfX5vlP7891VfHVhIELoxHKZt6
      z1r7sM9B0N2+JHkoFOLxoWEsYKVQ4vpGhkSxTKWhI0omQafKoNuNJkncaeMcqYoSiqCwWOh8
      6w95HRwMezkeGmopIe/aJlUSRI6EYhwJxTAti0vJJSqGbis7qypXlxMtix/AsOBepsDJSAy/
      5mAhl+dbs81mHLppMp3N4nWqBCta1wUQdmoMBdQmWfaGaXJxLcGekGfXG6BQru968W+957+4
      fJenj8Q7mh2ZlsW1ZJLj4Qh//N6dVj0cAdarVV5YWOFzJw9wK5Xp+tkB7qRzPD4yyGeONptO
      m5bFb716tS9KtAX8xfV7nB4Mk8iX+ePL031rMBmWxbvLaZ7eP8ByB0cdsPsnkyEn6x3MUlaK
      RYq6zndmlnlzeb2l3O5SakQnvAQc7ZeqYZmci0dIViptbyOXLDHg1XB08Kp4X2pOoiBwNBgn
      qDrxKBqlhs6NZGe6sGlZXFnfwDBN3kqsdRy5LOp1nt0/zKl4uGVOVABOxsP87Mn9tOtfmpbF
      aMBBxNVdtGknFFFEeR88h3cWN3raL22Uyzx/d76rGFSyUuX56fm+55jnc623ZKJY5lay/xyq
      UNd5e2WDv73eX9l4J0p6A6MBP3ZwgtADfQK3IvPU+CA/f+ogmtx5mTVMky/dnuP7i6tt10NZ
      b/D89AI313NtZ4a9qsqYz8dzkxNEnPfDGwE7FDwa8xNzutjni7ZtIO76BngQ1UaDzKYab7Za
      77iot7BRrlCo6x3pFVvIVKv841MHWS6U+M7sMgu5IpokcX44yrnBaFMp7EG4FJnPnznEv33j
      Ws+ZZQH4yaOT/Plbd7o+rhtK9QalWgOpi8JHrqozn+ld4bqbzhPqc/O2y1Vu72Lxb+Hi8gaX
      HlKW8cpKil+6cJjjsSBvJhJslCsMut08Omi73guCwIDbzWKhfUhbqhvcXu/eHbeAd1fTfHA8
      Sk6vbFeQHJLM2dgAhmmS1UuM+h2M+11EnB7KjSqiaJHTK4x7Bjsyk9+3np+yObwC4OpwzeyE
      JAqYltnFG9FGwzSZTuf4u9uzTKWylBsNMjU7fv7dSze4my7gUVpp0aIgMOzxcnogxK+cP4JL
      6dwOl0WBzx7fy7P7Rh5KFHcn/Gr3RSsJYl/hhWFZ1PvsmIacra9Z2qUiNECiUNmubO0WuWqd
      u+ks312cJVUrIkoGa9U8b6/fl9o/EAxu26ruhEOSKFR7rwWwNUAbDZGnR8YZcrvxKvbUYNjp
      5FpqlXu5NOlamWStSM2sYaBzJBjnsdhEx/AHfgA3gEfRGPeEmC1kNhUaOiu9AYx4PXgUFbci
      d1WNLtYN/uz6dNu/la3W+eqdeR4djuCS76t9iQgEFDfP31liMVfCsCyORoOslewfuKzb45Vu
      ReZEPMQnD44x5nNjWLYWaXL3KcA2Hhse4FY2xVIbqsKEz4ciKEyneif2YJcju5n+gT34MuRx
      cy9jD8REnA4CDg3vQ+iLymL/zNoHYVgWF1cTOLXmEzZRKnI3m+ZQKIIiSjwyMMC76+vka3Xb
      Wsvp5FAwzP/3bv8371K+xN6wi3TNvkmnsykSpQIPbqF8vcaj8VEUUezJm3rfG0A3TWbyaQzL
      YqNaIubRWMq1N8DTJBGnIjCV3WDE6+64AWRRZCbTnUJrWBZXVtP8k9OHsDBJVap8526Cl5NL
      LSetAEwGvfzowXFGfW58mtIkZisB+yI+5jO77x+A3Rgb8XvYE/ZxeW2dOxm7fm5TdIOcjse4
      stp9cmonjkaDxNwOLq12TuRVSeLPbtzZDjkFYDLg42TU1tfZzXI+Oxjhxkr2Ia1Ohc0F2HrT
      rpVLhB0u3kwsk67azEyPonA6FmePP0BZb+xK+LjU0JnKNH+PRb2OJApNin5eVetr8cMPIATa
      qsluYV/Qx+PDQy2iVy5FIuqRWS0XmM6mKTbKjHrdLbGZW1EY9/r6usorDYNbySwBzck37iS4
      sdEqvQL2YpjJFPiTq9OU9UaLkrMgCDy9b3gXn7oZj47HcKsyqiRxYWiQnz58iJ89epifPHSA
      s/E4siAwGfD2pW7nkCUmA14+tmeUD27OIu+EU5bRZHtIaGe+ZWHLVX53fpE9wf6FuYIOlY/t
      GyHqeTib1UGPE6/W/hzVDZOXFxfYqFQwLFsXNF+v88bKCtlaFU2WtlU4+oFTFtsWPoKak4Dm
      QBXtueOIw9X3jfa+bwCHLHMwEGU2n6ZQa3AvVSZf01EFGVOwGPd7ORwOslbJN/l/2bx8jQtD
      g8zm8hTqdWIuFweCQb6/2GrF0wmLuSIbxVpfPPlUpcafvneXX3vsOIrUvAme2DPAwah/V4oP
      AJos8jNn9293RefSBb41tcS7yynWixU7CfQ6eWQ0ypjXw51M97//6FAMv6ZyaW2N1UqeiFem
      pptEXW7OxGJUjQbfuNfZxilf1xkNuNgoV3sKgkmCwOdO7ifoUHlmzxB/tEtpFICP7h9hT9DB
      VKY5iRawu94FvfWWr5sGdzIZHh0c4lg02NdchwCcH4qzXsu0kPYmvAHGfH7u5VJMZ5O8m1xh
      1eXhdHS41QfiAbzvDQCwxxdirVDn3eQqutn8Ycp6hrir/Y5sWCamZZGp2SKmFaOOR5V3ZVOU
      rdaZyfRPfJtO55hO5zgSDVLSdWayOTLVKk5Z5vOPH+I3vn6pb1kRgH964TAHo35qDYP/9NpN
      vnJ9riV0S+TLXFlO4VAkDg378Xtak3cBm7j25Pgg35mfZ2mHmbimiOT1CmWjxlwfvYpyQ+eX
      HznC71+6TboDzVmVRD5zZJKJgJdcrc4nDo7y7ellVgr9c7EmAh6eOzCCS5XQTYPZnE1L1ySJ
      M7EBUl1Kvlsb4wMjcS6vJnvSsfcEfJyOR9ioOnl7bXnbiivscBFzecCC1dL9vGm9UqJYr+PX
      ut9su+4Et8NUKsuX78x0jOdkUeD8UIR0vbjDLAGG3D6ms9mWzSFbKu+t9VfO8yoqd9P9JZdb
      eHbvCB+aiPOd+XkKO3wLZEFAMmT+/tICmR4/iCwKfO7cAX7+wiEqeoN//vW3eaePWQFBgMOD
      Ac5NRMjU6uiGgSTBwYiPZyfHWSmWeHmp/cyALIpUanT1XAP7ZP/F00cRBYHvzCzz1tI6qUoN
      C3DJMi5VRpVE8rX6dkgYdzvxKiovTK/0dQAEHCqfPj7JYq7EVDJLrqrjVESGfC4+cWCMx8fi
      zOQyvLbS3nvgRDTKufjgpsJFgT+7frdj82/E6+ZzJw4QcdkiWgv5Ai8uLJKr1qkbFg5JZtzv
      xaWZVE07ydYkmScGu1eA4AewAUzL4k+vT3XkXG9hzOfh/HCEhYK9sMe8fpaLth/wgxARuZds
      39nbCUkQGPZ6eHu5/wQT4HgsyKBfJtPGB0ESBE6EY3z92hKvzCTa0pYPRv18/rHDfGAijmnB
      b333Cl+/tbtBl889coDPnJ7kzdUlSo0aoiDgUVTqDbr6NZdrFtVG98KhQ5L4hdNHcW26mpuW
      RaneoGYY/MO9Jb43n+h4y8qCSKZYY6PU+QAY9DgRRYHVYvtiB8CxWJBfeeww1zJrLRNnsihy
      KjKAU1Y25R81MtU6L82vcCuZpaTbImuqJLI/5OMT+8aJOB0IgsBMNs9X78x2UBKUOBrzEnAq
      7PGFiDjcPRPh970BinWd379yvWfDySlLfP70UTsR3CR+fXNupkWzEcApyQQUDy/OdZf5OzMQ
      IaBp/OX1mV29570hNyFP54R0fzDIR8bHWM2XefHeCm8v2VNGw343zx0Y5cxwBHVTTuTiwjq/
      +pU3djWkArZ63v/+8RNkzebFXqgZ1LoscK/sYL7HPMCegI/PHNrb9ONvSZN8/c5Cz/wq6nJw
      IhrinaUki7kydcNAkyVG/W5OD4X52u0Fkh3kMHci7NL4l0+dYL1WYL1cpmGaVHSTXNX+jJZl
      b4Yxn4cPTwwz6HFRaRhcXd/gZjqJIFhIgoBLUTg/MEjE4eJPrk91pYnEXE4+e+wADknqqwr0
      vnMAwzL74rU3TAvTtOykZPN9hRyOthvApSgcjwdJVStcX8+2dQM/FQ/zyf3jLOVtB5ndLMCA
      U6FlQGEHCvU6Jb3B22sb3C3mcXllXMjUMfn2/BJZvc5T40M4ZIm/uzq768UPdoXkldkVTow3
      T1o5ZanjBhAFgQ+Pj/D83QXW20yvgd2YfHK0lfQ1nyvynXvLfRUXNspVHKrEb3/80e2hElWy
      HVn+txcu9bX4AVLlGv/h9Zv83icfp9zQ+eLtGVYLzc/VTZN72TyJ62V+6shenIrEvVwau0Yh
      bI7M6ry+ssyQy9+TI7VRrjCfK3Ao3J98//sugzplefuq7Qa3IiOJArdTGV5ZWOHVxQRu2YFD
      an6uAFQNne8vzyPJOodjbk7Egoz7PYz63ByLBrkwHGPM7+ZeNk/QqfU0WGh+vxKn4931/2VB
      5G9u3uPN5fWWikOlYfC9hQRfmpqlrDe4tLS78GsnZjfKLbZRZ2Jxglr7rvKY10vdMDk/FCXc
      pgvsUmSeHh+i0tBZyBeoNOzGn2VZvLnU+lm64eLyBtWGgUdVCDo13KpiUyZ2GW7OZ0t8484i
      V1ZTLHVJsMuNBt+cWeR2Ot1kv7uFmmEw3UexwwLW2pAxO+F93wCKKHIwHOSdRPcpLL+m8UfX
      plrG6AIOlb0hLyYmblkhU6s0+TgpMgy4NH5qaB/vbaT57twSc/kCbOabkiAQdqusFMo9myoC
      8NG9w5yOR5nNZ9sa94mCQKpc524POva19TSqILUYhu8Ga7kae7xh1qq2MrJfdZCv6cRdbiqN
      Bg3TrpIpkoQsiCwXSsxk7ZxJFe34OOxwYmHhURRWyyVeX1nZvjHdiswjA3GORsJMp3dX3s1U
      a6wVK0xu9hQsy+Ibd5YeShvpy7fmOTXa+0ReLZZxdhH9M/p89d28x/d9AwiCwGNDtsJDJ7gV
      mZVNC9QHka3WmcuUeXpknLPxgbbuf5lahbcSa3z97nxLYmxYFvl6jbjX0dVwTQAeH4vz8X2j
      uBSZJ0dGWuZcxU35jU5y7zthAVdWk+/L0dG0LMY9AZ4ZmWTCG2IqleXK+jrT2Qy6aTLo9vCp
      /Qc4E4tT0htNJ3jdNEn+/+2dWYxk53men//sderUXtX7PkvPDEkNRWq1LGqhJMuSY9mSjcAI
      YAOOY+QqyU2QuyA3uQkQ+CqLkwDJRQDbSZzAEGI52iVqIzncNMPZt967a9+rTp0tF6e7umu6
      qruHHG4iX4AAUd3TVX36///v+7/v/d630yIVUXlmdoqtVpM71dpAuthyXH68tsHlQon2Q3KE
      PD8YoJo7vs/t0hsz0thudCif8JkeVfcYN492LoJdU44TfN8e3ry5LaGc+e8tn+JcJjXg16RK
      EheyKTKRyJGnc6nT5ZWdIrKQhvrtOl7Ac2vbo51IhCCiSXxteY7T6TjqgY0gC8GkFeEPL57h
      jz50BkkS3KiUuVkthxWIiM58PMbj2Sy/tbTE2VT6WOO+PXgEJzICHwVTVTE1BYHgavHwXOtm
      q8lGs8m1UnloHyUALheK3KpUuVcbvjh94KWdnUONv+MgS2IgtfX84A0T5rwgOLEIwJRlkRpS
      ux+LmHx6ZprEMR52WTPCQvLknfBH0ggTQpAwdL56eo4XdzYotDssxNLMxeNEVZX/9Orrx/6M
      2+UaH5sc41QixZXSfj1dAATyiayYJAn+xa99iJd38vxiY4eu6zIbt/js/HQoqxgEPLexzv0H
      jNtykQi/Nj2FKkms1YfbqQ6DIgkm4yYbx0jDjMK5sXAUsNTpULGHN41uVMoDvYoH0XFdbpQr
      R4b9tuOSi+psPESTKx3RGTsQ1SUhdikYD88XUoQ4sclh1tTRVY31hkTHCeesMxEDXZG4Ut5m
      PhXhesEduh6iqsKXl+YORfaj8EgiwB7Kdpum1yGiQ0SHTCRsXNgneGht18UNfGKaTi5iYqka
      uYjJ02OTpPSThbRy1+ZyscBrhR0MDZKmQsPt8q1797hfr7PWaAx1LVxr7r8eVVW0E56Whqrw
      1QtzJ/reYfjNc7MAR0bHIDhaZfukKnFPTWYfym72Q+NpblXK/GhtjUvb2zSdHjPxk6cWB5GK
      6Hx4MnP89xkaba/NRquKoQb8xsIiv7V0CktX2GzXKdsdHHpcnEhwJpXAUOSwTKoonM+k+IML
      Z5h5iIIIPKIIsAdL0UJDMt/D9Xxu10rEVB1TVY7tXuqyxA/WVyjvivDKQrCcyrCUSLHTPNmA
      e7PX49L24VTJ9X1+tLbGXDw28qTcajU5nUyR0DXm4xY3TnBpPJOK89XTc3z7xgb3H7Ib/eRU
      hmeWJgFI6jqmogxt7iwk4uTbHVbrw39+xjA4lUyMTIEgpCY8PpbmS0s23zxBHyBr6thBlxe2
      9yPGlWKRubTJlTfgb/Dr8+M8uzDNVrM90jNCkyS+tDRLy2vS9mwEYY9ACEGpOxi5fOExm1YZ
      T8Q5l5wgpmknrvs/iEcaASxV5xNj84wbce7Uylwp7fDCzhox4/iTR1WD/uKH8FS8XMrTdh0W
      ErGh43APQojRjoW251E8YgpN2SVNyZLgcwtTx56WMU3lmblJoprKv/rSUw/Fwx+PRfgnzzzG
      Kzslnlvd5mqxylzssIJ12jB4LJPlsWxmaFjXZZknclnm4rGBccAHMWGZvFbcQtZtzuSiR9rT
      nkrFOD9uHSpFOr5PIiqROqpMMwSGIvP0bJLXituczphMxSIDxQpBaO10Oh1npVZnu+EgBxoX
      UpNokowkBDF1sOQrBFTtLh2vh49LRFHe0OKHR8QFOgjX9/nRxr2+CRlARNa4V+oe0pDfw0Ii
      RjIqHRLKEsBnZuYZi0T56xt3j9ShTBk6p9NRVuqjT8KlRIKtA+42e5CE4NnZeVK6Qb7VxfF9
      NpttnlvdGnoqJ3SNZ+Ym8AmodW1MVcHpBfzHn15n6xjFuPFYhCcXMuQ73QE6c1xTWc7FmElE
      8IOASSuKKkncqJTpeR5eEOD57BYZQsa/F/j4hL5sEUWlYbs0e/sqDbIQzCdiILm4u7I0QRDQ
      6UGjLbhbafQHVOK6ymfmJ7k4nubbK/dH0onTapT//MLtE93JZCF4djnLfGZ/c0pC8Fh6HNcL
      m6M12+ZqadDAQgBTVpSvnJonZRg0nR6vFDb7GrKaLHZLvzqPpSb7Xfk3gke+ATzf58eb96n1
      9hdzxjCZiSb5/soGxZbd/wNJApYzSX5jcY5L+S3Wmw84zgjBxew4LdfBdj0ubZaH6v2kDJ3f
      P7fERrPBi9vbIz/blxcWqPVsXivk+3KOshDElAh3im0u5yt9IpgkBFlTJxfVyZg6tucTVRWW
      kjFs3+V66bBq3FQ0SrPh8YPbm2zW2gO/50IqxtNzOVbazX+RY78AACAASURBVKGbag+fnpvg
      Hzx+irVGneeGeOM+PTZBUjf4zsq9Q5KUlqryeGaMStcOTUdiMXw8XsgPEtIkBJ+dXuCXhSK3
      qhUCAhRJEFEU5mIJrhZLIyPpJ6emaHcD/s1zl0cyTSGc//jDp07hKYej7mTU4rMzC+TbHf7q
      2s2RF+tpK8rXl5e4Xs1TscPCiiHLXKvscCaZY846uVn7KDzSOwCEC+dMMsOrhS3cwEeRJLqu
      w+XyFllLYj6ZZDyS4GaliIeLUHrcqpZYTmXId1oD87ACwaX8dv80Skcl5hIpmrZHzQ7VwQIC
      ZmJRrpUqYbVghBpwNhJhOhZjTsSZsmJstUJm6vV8nf91Ze3QiebvGtDlW10+Pp3jT58+h6kq
      vLxd4HsjxHE3Wy3O51L8949/ntVqnUtb27vK0pPkohH+7PkrRy5+gOdWt5mOmXjS8Gh5v14j
      orSH6rE2HQdDkfj1man+a/l269CEmCQJ1psNVhpVVFmwx02xPY+7tQrSCFMTifDO8Vgmyr/9
      zY/xX166wUsbpf5wviDsRj+zMMEffGgJIXv8eOPw7ELL6REEAS9v54+sKm00W1za2abhhdyn
      lUaFs8kssiQhnSgpPh6PfAMIIZiOxknqBs1ej5brcLm0fyo33S7JQEfIHgoiHH6vlchGTD43
      s8DdWoWeF44TXi2XBkKxT4CHw9eXT7Fab/Ktu6u0HXeAHxJRZSwttDTdgyHLXMhk6LgulqqS
      jUTIRiK8sFHgf19dPbaD/PxGAU2W+JOnlvnZxugIA3CtVOHD41lWOyVC00KflXaR9abJygn9
      ir95c5VnltJDv2Z77pHKdVXbpuu6rNWb5NsdhAg1PntBuPEEsBhPsdNqDz3lvSAgZeiUhphL
      zMbj3Ck3+fNLN7lXDbn3mVgon382neC3l+c4k0n0ew7NXm+oQ1DaMHH94EjW6x7KnR5RQ6bn
      eyR1g5VGGdtzuVsvMWMlj/33x+GRbwAIN4Gl6liq3qc/H0Slezgs1npdJqMxnh4LKyN3a4cF
      VCGse9+sVPh/d9eHUno7Trh5vjA/S8XucqVUxA18fra1gbwtOJfO8LGJSXqez3999eRCUM+t
      7jCXjA50R0fh0s42qrq/SGs9m9c3T149aTkulY7DsGnBjBGh5/sj+wYtx+V/XL9Nod05cBeA
      VERjOZNgNhZn0rTYatwf+f5LyQTz8QQ3ymVsz0OVJGZicV7aqPDq9qB7o9hVB79aqlK/7PBP
      P/4Y41bYP4iqKk9kx3i1sC91aakqT2TGCAhO9OwVITNpRmm7PR5LjbPdaXDvES1+eMRVoGHI
      RaID8iWWqrEYP5y7JTWDSrfLTqtNo9cbebGRhOAXG/kjp8bKHZtKt8dmqzkQCbwg4PVSkcvF
      Apc2i8e6Fj6I794dPtzxIATiAZKboNZ9OCpCRo8Se0D2JaIoPJEd43w6M/QPJwvBlXyFfHuQ
      p+8FUGz3WK12GDctZEliPDq8Xi6Ait1mp1sjZcp8cnqCb5w9y/V8g1e3jyajrTda/NnzV/qd
      dCEEy6ksj6cnaNtQbLr4rtY3TnxQTGsYDEWw2apRtTs0nR6z0SSfnjzFYmx4hHxYvCUR4CB0
      WWE2lmCjWSOuGdR6HTbbNaaisTASCIEqVL57f5NCOxye1mWJmZiFISuH3ACTusFG9XhOyss7
      eWRleKXiZqXMTvXk+vx7aNgndGCPJ4hocKdWAgQX0mO8uPJwmitxTeeTs7PcrpYpd7sU2h1c
      F7519z6WpjFuWpTtTv++kzEiBL5EsTX62aw1mtyt1lhOp1hOpVlvNAbMDwWQNHSqvf3X7tRL
      1Ds+Pz+h5Pxmo83f3V7n9y4sYrse//fOSsiZ2v36TrPAi1sFpmNRPjSW5l6tMbLiFFUVJmMR
      SrZHVNGIqqHQ1qPJ/kO85RGg7fZYa1ZwA4+O16Pne7TcHqosmIyZzEZTXMlX2Wy2cHbZjx3X
      41alRqHZI6kZu/Y3CqcSKZ7MjR9pyLGHo1IV2/OGusEcB8cLMI9ps6uSxFTMZKPVoOcHOL7P
      WrPGWPTkUo0As4koEUXhXCpDu+ezUW+z3WqTb3e4W61xu1wja0T5rcVTfP30Wb6yuHQiM7o9
      OUVDVvjMzByzVgJFyEQVjY+OT7EYjz/wO/v8YGXjoWYefroW0lD++sZdXj6w+A9io9HiJ2vb
      LKeTDOMwGrLMhVyCtVaFjutwLjWGLj/68/ptiQAZ3aTne+QiFjerIc8nZ4TcnG/f3RxZU270
      XESg8PcWFxBCoEkStudhyPKx1ZR0JIJLb+jpElM14trDRwBZEvzG4hx/e3dlaKVJAp5dmGG9
      WaO+a/EZAKVuh2xMReycjKqbMw2WkuFCvFwscaN82BPZB26UKszH45zPpHF8/0SKcj0vlGP/
      +XqeH61ssVlvh3m+LPFqtMH5sRi6HvQtVQ1ZYavxcKliqWPzk7VtrhaP9nJu9Bxs1+e3Ty/x
      Wr5IsdNBFoKZmMXTE2O4OFwpbyMJCekYdYc3irc8AqiSzMXsNB8Zm2UxluYT4/PkIia6LFNo
      d49UhwO4V63jB6GKQddzCQj6i+MofHxynMX4cH/gi2NjnMmM9g4ehUkrwnImyd8/f5pJa5AX
      E1Fknl2Y5eJYtr/4D2ImHuHxsePr1pKAb5xfRJYEnu9zvTQ67w6gzxSVhSA5YpDmIDRJ4s9f
      us5/e/UmdysNursS7T3PZ63e4tu3t3lhpYEmVGasOE9mp46kKI/CC5snU+e+UaoyZhrMJgwm
      YioTcY2FZJSEoVHstsLINDaDLr3xZtdReMsjAOyRucITJaEZTEUTbLSqVE5wMbQ9j3K3w/Wt
      Yr+mbak6hiKNHA5/LJviTCrBQiKGKkus1Ou4vr+rSjbBfCyOKWv81et3T9TR3MOn5yfCMm/M
      4o8eP8dKvcF3761T7naxXZ8fr21ys1wlHT38WMdMkz9+cpJ/d+kqt8vD83RZCL54aorpuEHL
      cZCFODatafZ6eH7Yb3ksl+Z+vT4yXVEliUubZW4Uj+Y57TRtXllv8c8+voCuyJiqTO1kU5B9
      2EOc3Id+n+vxw/VVbH+XK+Z7XC7lKXSbdDwbIQQ9z0OMcI5/s3hoh5g3CyEEpqyx1qrg+LB9
      jHG0Jsv0AnuAJ9TzPSasCDHVoHqgB6BJEh+dHOPZ+RnynRYv7qzTcmwmolGemZ7jYm4MQ5Ep
      dNpIEvg+3BqxGB/EdMzkT59a7te4S50u39yVO/eD3WEOP6Bq9yi1bWK6giKLXbHeOBfSOSKK
      wkcmc0QUmWK7OyA/spCwODcWxRM9bteq3KiUcAOfcsc+0l40aRhMx6xdtT0bx/NpDBl+USRB
      WotwaeNkKtCljk3C0DiTjrNab524hwEwYUXImvqJqdOWIQ4NM/lBQELXMRWVhVh66JzIo8Db
      EgEehCQEaSOKInrH+sdmTYPGkJTC9hy+duYsW80Wz2/tYHsu59IpHs9l8QKfl/Ibfa5NvtPk
      Xl0lqUd4aWe7X1lKxXTO5+JcKxy9CRK6yj986gySFHJp/CDg2/fWRgo/9byAjWqPry8vkokY
      RFWtT2lWJcF8KkIgp6l2e6T0CE+Pj7PdbvBKYad/R/CCgGvlEuoxF7+oKvP9tfv7LpwCJmMG
      nido9HoIBFkzwkcmcvzNteOZoAfxk9Vtnl2c4vMLU/x0befEgmWfX5ii5fYoHzPADqGynqFI
      hz6XKsl8fHwOWUhH0sHfLN6RDSCEwPcDKr0Wp9MWV4u1oWHbVBQ+NT3BL7bXD5mxCQS3qxV+
      sbnvVP9KIc+1comnxnOHfAo2mnVuVqoDdq0Nx+aTCymeGMvwt7fWaD5wckq7JoAXp2K8Xtnm
      dr3IY5ksUUUfak5xEF3XY6XaZCGxf9cIgoCfbq0PEPaKdpM7dXXk7djSFWRhDnXdmbaiuIE7
      8DshQODx+fk50kYEwf4gy179/aTYbnao2T0WUzF+8/Qs37w5WpJxD4upKEsZg5ot8+oJLv0f
      mRxDVtyBCA8wZcVQxMkEbt8M3pENADBjJbE9l7Jo83guya1yc6B0mYsYPLswy2zMYrVhDUgF
      Qthl/MXW9qGSaNfzuLSTJxUZvDS5fjC4UHZRs22+cvoUn5ob4zt3V1mthYrGC8kYliFYa4Ud
      XC8IZdhfym+TUM0TnaRbDyza0Kv3cLS5W62MlPDTJIkvnFrg0vYOt6vV3SpYqDq9nEny3dV7
      h/5NQEiJmIntFws8338oVQgImb17o4y/e24ezw/41u21kb/72UycD8+Y3KgVEMBCyuTeEaYg
      SUNFUV1sz0UWoQSKLASzsQTnUtm3fPHDO7gBLFVn2kpSd7pYUYWoEcOSTYqdNook+Mh46Opx
      ubxNRJXJRiL90cAZK47nw4o//ETreT4pLU7XD3PilBEhqUd4tTC8mXOvVuVKsYBQAuYzOrLw
      OZuLcq92mL7gBwE7rTdmJFDtDU+ZfEZPhU1ZMaKaysWxHB3PZaPRRIiQ+Ga7Hook4Q1Z2Loi
      U7NtWk4PS9VQJBlTVQ5FuaOgyzKGIpNvdbhdqZEyVZ49NcmdcoNqp4ft+SHrNG7xmfkJTmWi
      /GInjBIBcCYbZSmR5Lm1LXre/u+nShLns0lMw6e5S5tXZMG5VI6FWBL9DQ63vBG8YxsAIKOb
      fDQ3xwuFVbqeiyZJuMLGDeBaJcw598wQEprBp6dPowgJRZb4werRUoQJzeDXc7O4vocuKzSc
      HldLpUNRIKqqvF4sDixALwh4YWsLUxv+eCxNQcI+1tlkMjpYKo0qo4dJLmZzvFbMUz0g1zgZ
      jXIhnWGn1eabd+4ORMiblQr3ajVmYuahk92QFW5VKjy3HsqYSEKwGE8wl7DIH+FL/CCmYiY/
      29jh1Z3B56Opgs9OTPCZuUlMVekv2K7rDnTvFUnClbs8OW3huoIpM0lUVZmORZEl+NHm/YH3
      67oOxkPM8z4KvKMbQAiBLissxTKU7DYxVe8bcTu+R8vZH6Nsu+Hpr+5yhPYczkfB0jTarrOr
      IiyIqRofm5jkpfx2X8snbUSYjlq82j0cGdzAH0m5PZdJ47oS9464B0QUmbOZFCvVJluNUABr
      3Ap17B8c/JmKWszFE0zH4qw1ajR7DinDYCpqgRD8cG19aGfb8X0KbZsnxjJsNBu4vh8OkPQc
      tg5EKT8IuFOrEosoJ3K4h7AfoShiqEmHHwRcKZYRAr52ZgEIXVnWm3UsxcBUfMZNi67rULU7
      KJJA1eBCLkl816i653lEFbWvEi2ATOSNzRy/GbyjGwDCTTBjJZmxkv2ubdPpsRRPc69eYaUR
      dhNjqsHrxTKFdvhAk4Y+lGoLYen0bq3K8zubeL5PRFF5IptjOZVGlSReLW4DAWdTSRQx+hEs
      pzKsNevstMPFFE4qxVhOZZg0Y/z1jbtDK0ESgo4d8M+/9eIhufExS+fxqRincxa6LDFlxfhw
      bhxJhCXTpcRgs6zc7ZJvj86jm47DpBnjYnYspIv7AX9549rQ7/WFx2cWJvn+3aM1VwGWUjG8
      Y2LclUKZp8azqAo8t7HWH6OUhWDWShI1VNabNXwCTEUbUAFUJYnlVI5fFrcRQrAUTzEdPb7B
      +ajxjm+Ag5CEYCm+rx5wITXGeMRip93m+c08HXewta5IYtd0b//PGVEUDEViq71ft267Di/u
      bCEIWG1WcHYdJl8v5/lwdoqIohw6YQ1ZIWeaFDpNVCkkYF3IjLGcyiAJQddzeHIixY1SjVrX
      oeN6qJLAkBV+fr/E+giplHzT5vs3bXaqLv/yc0+SNY0j892TSJW3XQdVtgAoO6MVmwMCvnJ6
      Bk2S+M7djaGRQBKCT86MMZeK8uIxan8BcL1cxaE7MEPsBQEv57f46uIZxs04K/UqIvC5Walw
      JplCk2VuV8tcKRXo+R6SEFRtGz8I3tKS5zC87Y2wh4G0myJ95/4qTeewqoQfhAZ05zMpeoHD
      RNTkybEx7g65vAaEvHw/8AZei2s6y6kc2+1mv3QaVVQ+OTXNK4UtSnY4VIKAmt1l2orx8611
      Xi8XqdgdJDngdDrOV5cWuZDJ8Bev3ef+CbzGCq0uV3YqfHbp+JnWXxZG0woE8NT4ONbu8IAs
      JK49MEi0B02W+djEBI+PpbmQSxEEwf7vrCqcyyb5g8eX+PLpGW6Wa0NLrw9ClyU84R56P9f3
      aTku18tlul74/1utJtvtFnFN58Wdzf6mCatWXaKKStoYrTD4VuBdvQEAVmp1Lh9hvt3qOUzG
      DGy/h49HudulOeLUlEXYdNn7YwlAkzRuVxrkWzZtxyOlR/jc3DwQcKs2yMPxgoCddpviAzXr
      htNjyrL4m6vrPLeyw0mxp7L81GQmHCzxfV7ZLvLD1U1+sr7N1UKFnu/DbtVnGCaiJqeTSVbr
      zXDKKwjvSfkhqttPjY0zaVkIIciYBsvZBEICJ/BRZIEiC2wvFMRt7U6VHYfFRBxJ9g/1XQRQ
      6h6eKmu7LlW7iz2kJK1IMrOxtzcNelelQMNQHWJicRCO71Po7F/4AoKRcukp3eCxTIab1QKO
      77Pd6HE9P6gjdLvXYKNxk09M54a+37CuNMCtSpW/ubYy9GtH4f9cXeH3H1/ED3z+4urtQ35Z
      tyo1dFkiHlEO0YYNWcZ24D+8fLVfCZKEYNIymYxFabk2Pd8P5VOyOc6n99PLzUaLv7h6h/wB
      nZ6W41Jod7lSKHMmfTKy4GIyhiRHeeXAcxRAUo+MvLs0HWeopKTxJtQd3ije9RvAVI/W25GE
      YCGe6l+WzySzGFKDlQecZxQhOJ/OMBWNMWFavF4s8/Lm8M5mx3X52foOs0ltwJVQlSTGzRj3
      6odTrOv5+pG2rqPQdT1e2ihS7nVGmsXZnk+t4/KZ+Uk6rkMQhGJar+2UuVkbJLb5QcBGo0Wx
      3eUb5xaZi1vosox8gEvT7Dn85QOL/yBcP+BGqUpMV48cW0xHVDY6JYIgYCEeRxIy5W4bXZGI
      yPrIDRAKWUkDkVSXZRYTb17l4WHxrt8As7HYSKUHCI23l5NZZqw4XdflXr1CL+hhqjKeH4q6
      SpIgs6sv03IcTFXl0hEevBAuOlM2sXQodzvEVJ0nsuNYqka+3aJ1QMI9pRtUqidTrxuG5zfy
      2BytnNfzfPLNLr93bgmA793fYPMId0Xb8/j23XX+5MnzA4s/CAJe3CqMVGjbgx+Ez24uYbE6
      JBWaj1uMxUWf9Vl3OjyRmaDaa9L1PNqOgySGG3AvxpMsJhLcrJQodjtEFZWzqQwJ7eGGhh4F
      3vUbwFQVPjM7w/dWDqs3KJIgGZG5XNpmKZHmVq1Efjcd0mTB+WyOes/hernITrvFTrvFK/kd
      LmbHKXePbwjVuw5fWTpz6PUvzi3xcmGb7VaTbCTCxyemubP98Baje7hVrjGdOv7yd7tS6x8E
      vywcz+osdbrcrdZ5PLc/P+sFAdePGVTZQ7Pn8snpCT41E/L2670eTccmEZF5Ipdmp12n6exJ
      ogg67r7xtSTBqWSClVqj33wUwEI8wZlkClWWuZibONHneCvxrt8AAGdTSSxV5ZV8nvxuH2A8
      atLxOlR74X87ndaAt4AQsN1uslpvDOT4buBzKb91MlunYZLkQcC9epXV3RmDVadBx1nFUN84
      XVc5oRhv1/X67uonkXAPCE0nBjaAHxzrH3wQ1a7Nx6bGOJ1KsNKo8mpxC4Cb1SIp3SCqaHiB
      T8Ywqfe6GLKC7bmk9AhP5SY5n8qx3mzg+B65iMlk1HrLqM1vBO+JDbA3hDJlRQkIT5LtdpMX
      8/vKaR3XIabpOAcuqZ4/zFc8vCjLJ+iIjpmHCWrbrRYv7wxenAudNp3gDYxN7WI5G6c64nJ9
      ELIkRnJ/RsELfG5Uimy0GmiSzEIs+VBeAbos4/o+QsBOe7Dz7fg+z0wt4AcBrxU3qPa65AyL
      5WQOXVaQJQlNVkgZb8yF/u3Ae2ID7OGgIkBM0wZyTEkIPpSZIN9ustmuE9d0LCXCevNw/ioJ
      walUnBtHuMvLQnA+k2K90aDruaQNg5RusNqoDd1U8YjMXDLK6gmMrA/ibDbOF5dm+J/X7xz7
      vZmIgaWpqJ6EpaojtVYPoul2uVzafwalbpuYrrBzgo8pC0Gp1+C7a2U0WTkkqqtJMs/n13D9
      sHwcCwKmonFM9eEEdN9JvKc2wEFEFY0PZye5VQtz4Z7v8nJxnSkzjht4FLstfD1AlaRDNeqE
      pvOl+Xk6zt2hFzxBOFb5/PZG30dMAGdSaUYx3GVJ8MdPneFf//CXh95vFFRJ4ncem0FVPeK6
      emxqcjod4/ViAU2WOZ2Oc2nraMO6pKGhyAHOgY/s+D7TcYOVauvYz5kyFcp2CyEELTe81GaN
      CF0vJL3FNY2Ndlhts1Sdj4/PP1LJkrcD755k7CEhhGDaSvDZ6SV+bWIOZZcSUei2+lHB8T3O
      Z9LoB+rLMU3jmelZJAEfm85wOm0R11TkXdWJaSvKb59eoOV1B0z0AkI9oVF9iYwR4dPzE/yj
      j549Un58D7IQ/M7jU7hym7v1EhOxw3X+g0gaCtudOq8Udnh+e5Oa0yJxhCS7Jkt8eWmWyBAH
      z/mExecXpo78nGNRg4V05JDXcMYw+ejYNF7g0HTtPmEwo5tIQrxtNOZHhUeuDv1OIAgC8p0m
      FbvDjJXgdq1E07GZs5LcrOfJ6FGaPYdaz0aXJZ7ITHK/XqHQDfOA2WiSjGFyt1Fm0rQwZJ3v
      rtwf+l4JTWfKCmdw9xBRFJbToXLxuGnx8kaFf//CNUojjOHSEY1//LFzjCflfv/CkBUmjQzf
      X9kYKFHGdY3TKYuG2z60uHRJQRU6rxcq/dN8T29/IWUyFo3Q9ZwBpW5Dlvn01DyapPC9lXUu
      bRXpOPt3CkUSzMRNPrswyUqjPFDuhVAcVxI+qqQwYyVI6Sau75PQjuY0vVvxK7EBRiEIAjqe
      QxAE3KwV2d69xFmKRsPp9Ut2hqygylLfnjWlWlwbIUdiKgrfOLtM3bYpdNqoksx6s9qncQsE
      vzY5S0w1+M6dTZ5fy1NodRFCMBmLMBZXmE5rqJIgpuk0nG7oFhlL8nh6Aj8IeDm/w61qhaiq
      8PT4BGv1Oreqh0uXAvjd08s4fsB2s43j+zi+y83aIH/fUGTGTTMcMI+nuFOp8lqhgBeE5uVe
      APOxBDMxi61OlZ4fdmoVIdHz901HEprOtGVRtltczExjqW9/3f5R4z17BzgJhBCYu0Mo81aK
      QqeJHwTMWElWG1Xqu9NIcU3HCfZr1eNmlOul8tBsX5dlrpaKdD2XsYiJpWmUS/sndkDA7VqZ
      U4k0esTh6cUoppLkYi5sov1w4x5e4NPzodxtcyE9RlzTSRshF/5OrcJqs4KmgBO4vLizQUQe
      fanseg5lu0PcUBk343x/beVQv6TrekyaMU4lUry4vc3L+X2WpyQJJKDQbbKQMnGCfZqCG/gs
      p7J4vt+XuDRkBT/wkd8ioaq3G7/SG+AgUnqEZyaX8IIAU1HJRaK8Xt7B9T1mrARbrTqeEjBr
      JVmMJdlINoeeul3f4XolvHzer1fJDGEv1ns2P95Y7aclXc/juY1VLubGB8R695ZpLmIR7JIu
      VpuDVSYvCJAlhnZVs5EIrxY36Xjurux5eqgoF4RzBbMxn9dGMEsd3+daqcSD14qsYTJuWgOv
      SeLt5+y8VXjfbAAhBIay/9e1VB1FEjQdh3K3zWaziU9As5cnIod0aEWSuFkJU6FcxERIwaEF
      Vul2iWpKnxIgCFmnD1ZY3CCgYncxFbWfailComrb/N3KbfwgYCGeHFpFyUWiLMRSvLSz3e+q
      TkYtzqZS/LIcNqYCQkNxbYTMjKmolDudI7k9jgfjUaM/u5wxzLednvx2432zAYZhKZ6h3uty
      o1JiL9N1fJ+79TI122a9Ve9rZJoHFvlB+ARcSI9RsdusN+uMm1FkoVAYYsgnC4nlVJaVRhVd
      UvADBqLML4t5UrqBhOh/Hk2SmYslSOkGs7E4q40a6806mizTdh00Se5virQeIa5GuFwsDEQR
      U1GZjyeOVYUwFIVPTMyR7zQRCMbNaN888FcVv9KX4JPA9X1+uHGXprNf8tQkhartHEo5dEni
      QR9KVZL41NQsrxQ2+wtRETI1u3foDpHQ1X4KtBhPsdFoUn5gPthUVJ4em2Cr1aDWs0PJEEkw
      FY0zH0vyk83VAcn4uVh8l12psNGq0vNdJowUK406thcOquiyjCpJ5CJRflkojVTO/ujEBE+P
      jz/U83uv41d7e58AshCcSqQPKLdJKJI8XLNeiAHGYjjIbVDoNAfUJnx8LqSzfc5LOCMbG8j/
      79Urh0qMENbaJ0yLJ7Lj2F4oetVxXe7Uyvxie+2QX0K5G6ZVm+0atu8SUw2WUxm+NLfIh3MT
      +IFP0+lRsbvcrJawNHlo/X/cNHkim32oZ/ergPd1CgTh3WAhliKlR2g6PZK6wfVymfwQ/wBZ
      SDyRG+NaJY8mKUgioOl0WWsN3gsUITFtxej4XXqeT8930RUBB5gLgvBe8aDg15hpokgSpXb7
      kIRLe+iG8VlpVmi7PRQhEdcMfr6zwqQZZ6N52BLWx+ezszOs1BsUOh1USWIxkeCJbPZN2Y2+
      V/G+3wAQboKkHopnAUxbMW5Wy4eiwLhpstmq4gYuge+T0iO0XEFSM7AUg7VmHVWS0GWJV4sb
      JHSDnt/DDXy6vkNaj/T7BTNWgqlonKrd7Y87RhWVjGGy2WoSUZSBuwCEl+Gq3R3I5WetBJoi
      WGtWsVSd+43QW61RKxD4hxd0EATEdY0vzM8/8uf4XsT7/g4wDH4Q8HqpwOu7BnuCUENoLKpT
      d7rYnktU0fhIbpaO52ApOqok9bWELpe3yHeaTJpxhIBCt0VM1ZmzktyulULTECPKtUoePwhI
      ahEiss7V0n4DK6ZpTFtRttuNXaVkg09OzNJyHG5VS9iex2TU6qdvXc9BERK/2Fml5fbQJJmM
      HuNGZXBuwFRUvjC3NNR5/v2IDzbACARBQMPpUbVtmiO2iQAAAT1JREFUDFnGw+NyeQuB4Fxy
      jKwRxVDUoWVL23Op2R2SuokqSbTcHi/kVwDR3ySqpPQv3rKQaNr+gBAYhJNmX5xfwPP9vj/W
      cei6DoVui7RuokoyL+W32GjW8Xf7H0+PTzJhWu9J2sJbgQ82wAlhey5XKztossxyYuyhhjr8
      IGCjVUUWEjudJpoko8sqN3btogxJZb0xfLzxa6fOkBwhnHvS9673bBzfI6bqb6vu5nsBH8TB
      E0KXFZ7MhA7sD7uAJCGYtcKB70kzlP0IgJim0/M8VCGz3jis8vwoIAnxpjbQrzo+2AAPgUdx
      cu79DAGMR0KKgev7xDVtgH4NofLDg17BH+DR4n3fB3g3QJEkLmbHBurzUVXlU1MzA4oOH+DR
      44M7wLsI9Z5Nod1GkSQmo9b7si7/duODDfAB3tf4/xWgjJ3Ob6qwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Experience' width='153'>
      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
      yIRyEjKh3P8DwGZwFHtYl+MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Games Played' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Physique' width='192'>
      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
      27ePv/3bv+XSpUskJyfjcrk4ffo077zzDt///vdZu3YtTqeT0dFR/H4/Fy5coKSkJHS+6dy5
      c0RGRnL+/HlycnJ49NFHSU5O5tChQ6Snp1NXV0dqairbt28nNzeX9957j7lz51JTU0N0dDTf
      +ta3KCsr47XXXqOyshKr1cpnn33G888/j9frpbOzk7i4OFwuF/v372fBggWUlJRgtVoRRZHy
      8nL6+/ux2Ww899xz7Nu3j7GxsdBw0ufzMT4+Tn19Penp6RQWFpKSkkJLSwuyLHP69OlQi75g
      wQKOHDlCdHQ0R44cISkpifT0dNatW8e7775LVlYWhw8fJiIiguTkZB588EHeeecdCgoKOHz4
      MDqdjvj4eB599FF27dpFaWkpDQ0NKIpCZGQkP/7xjzl8+DAVFRU0NDQQERHBqlWrePrpp7l4
      8SKjo6P85Cc/ob6+nt7eXp5//nksFgufffYZf/d3f8fAwABNTU38+Z//OUVFRbz22mv87Gc/
      A4Lny7Zt28b69ev5j//4D376059OPQS63HKZcINAc7sVgLjUbIrzs0K/u8dH6LAOAJCSmYPO
      P8Gg3cuczDTUgIfW9m4y5uRg0gdXMb5JH8UfPXqUpqam0ElYu92OwWAgKiqKxsZGBEEgKiqK
      zs5OYmJiMBqNDA4OYjAYkGWZsbExEhMTMRqNods2zGYzg4ODJCYmBvc9JInh4WESExOxWq3E
      xgY35qKiomhra2POnDl0dnZisVhQVZXz589TU1PDQw89xKlTpygoKGDOnDkcP36c8PBwiouL
      OXfuHFFRURQXF9PY2MihQ4fYtm0bYWFhHDx4kB/+8IdcuHCB8+fPU1paik6n4/z581RUVJCY
      mMjQ0BBer5f8/Hx6enpobW2luLiYQCCA0+kkNjYWi8XCJ598QklJCdHR0dhsNoBQ7zZ37lzm
      zp1LT08PIyMjrFq1ipdffpm8vDyWLFlCQ0MDQ0NDPPDAA/zqV7+iqKiIVatWcebMGZxOJ/fe
      ey+//vWvWbhwIWvXruXf/u3f+N73vofJZOLtt98mIiKCH/3oRzz//PNUVVWxYsUKamtrOX36
      NH/913/NL3/5S4qKisjKykJRFF577TX+5m/+hn379hEZGUl4eDhFRUX80z/9Ez/+8Y+nNoC2
      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
    </thumbnail>
    <thumbnail height='49' name='Points' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
